Console is in 'commands' mode, prefix expressions with '?'.
Launching: /Users/rolo/GitHub/rust/unicorn_1/target/debug/unicorn_1
Launched process 56508
Stop reason: EXC_BAD_ACCESS (code=1, address=0x28000002c)
bt all
  thread #1, name = 'main', queue = 'com.apple.main-thread'
    frame #0: 0x000000019865184c libsystem_kernel.dylib`__psynch_cvwait + 8
    frame #1: 0x000000019868e638 libsystem_pthread.dylib`_pthread_cond_wait + 1232
    frame #2: 0x0000000100d68660 unicorn_1`std::sys::unix::locks::pthread_condvar::Condvar::wait(self=0x0000000101a06a98, mutex=0x0000000101a06a88) at pthread_condvar.rs:113:17
    frame #3: 0x0000000100d5fb7c unicorn_1`std::sync::condvar::Condvar::wait(self=0x0000000101a06a98, guard=std::sync::mutex::MutexGuard<bool> @ 0x000000016fdfe668) at condvar.rs:191:13
    frame #4: 0x0000000100d7fb70 unicorn_1`rayon_core::latch::LockLatch::wait_and_reset(self=0x0000000101a06a88) at latch.rs:249:21
    frame #5: 0x0000000100006504 unicorn_1`rayon_core::registry::Registry::in_worker_cold::{{closure}}(l=0x0000000101a06a88) at registry.rs:511:13
    frame #6: 0x000000010000633c unicorn_1`std::thread::local::LocalKey<T>::try_with(self=0x0000000100e5c4c0, f=rayon_core::registry::{impl#6}::in_worker_cold::{closure_env#0}<rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()>, ((), ())> @ 0x000000016fdfea58) at local.rs:446:16
    frame #7: 0x00000001000061a8 unicorn_1`std::thread::local::LocalKey<T>::with(self=0x0000000100e5c4c0, f=<unavailable>) at local.rs:422:9
    frame #8: 0x0000000100dd8ecc unicorn_1`rayon_core::registry::Registry::in_worker_cold(self=0x0000000101a0c400, op=<unavailable>) at registry.rs:499:9
    frame #9: 0x00000001000067a8 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000016fdfec70) at registry.rs:927:13
    frame #10: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000016fdfed60, oper_b=<unavailable>) at mod.rs:132:5
    frame #11: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10000, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000016fdfed30, producer=rayon::range::IterProducer<i32> @ 0x000000016fdfedb4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000016fdfed40) at mod.rs:416:47
    frame #12: 0x0000000100005b20 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer(len=10000, producer=rayon::range::IterProducer<i32> @ 0x000000016fdfee44, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000016fdfee58) at mod.rs:397:12
    frame #13: 0x0000000100005a4c unicorn_1`<rayon::iter::plumbing::bridge::Callback<C> as rayon::iter::plumbing::ProducerCallback<I>>::callback(self=rayon::iter::plumbing::bridge::Callback<rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000016fdfee98, producer=rayon::range::IterProducer<i32> @ 0x000000016fdfeea8) at mod.rs:373:13
    frame #14: 0x0000000100007454 unicorn_1`rayon::range::<impl rayon::range::private::IndexedRangeInteger for i32>::with_producer(iter=rayon::range::Iter<i32> @ 0x000000016fdfeec8, callback=rayon::iter::plumbing::bridge::Callback<rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000016fdfeed0) at range.rs:191:17
    frame #15: 0x00000001000074b0 unicorn_1`<rayon::range::Iter<T> as rayon::iter::IndexedParallelIterator>::with_producer(self=rayon::range::Iter<i32> @ 0x000000016fdfeef8, callback=rayon::iter::plumbing::bridge::Callback<rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000016fdfef00) at range.rs:152:9
    frame #16: 0x0000000100006148 unicorn_1`rayon::iter::plumbing::bridge(par_iter=rayon::range::Iter<i32> @ 0x000000016fdfef30, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000016fdfef50) at mod.rs:357:12
    frame #17: 0x0000000100007404 unicorn_1`rayon::range::<impl rayon::range::private::RangeInteger for i32>::drive_unindexed(iter=rayon::range::Iter<i32> @ 0x000000016fdfef80, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000016fdfef88) at range.rs:165:17
    frame #18: 0x0000000100007480 unicorn_1`<rayon::range::Iter<T> as rayon::iter::ParallelIterator>::drive_unindexed(self=rayon::range::Iter<i32> @ 0x000000016fdfefa0, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000016fdfefa8) at range.rs:126:9
    frame #19: 0x00000001000059fc unicorn_1`rayon::iter::for_each::for_each(pi=rayon::range::Iter<i32> @ 0x000000016fdfefd0, op=0x000000016fdfeff0) at for_each.rs:12:5
    frame #20: 0x0000000100007300 unicorn_1`rayon::iter::ParallelIterator::for_each(self=rayon::range::Iter<i32> @ 0x000000016fdfeff8, op=unicorn_1::main::{closure_env#0} @ 0x000000016fdfeff0) at mod.rs:371:9
    frame #21: 0x00000001000057f8 unicorn_1`unicorn_1::main at main.rs:22:5
    frame #22: 0x00000001000040e4 unicorn_1`core::ops::function::FnOnce::call_once((null)=0x00000001000056fc, (null)=()) at function.rs:250:5
    frame #23: 0x0000000100007654 unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=0x00000001000056fc) at backtrace.rs:121:18
    frame #24: 0x000000010000501c unicorn_1`std::rt::lang_start::{{closure}} at rt.rs:166:18
    frame #25: 0x0000000100dbbc24 unicorn_1`std::rt::lang_start_internal [inlined] core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once at function.rs:287:13 [opt]
    frame #26: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panicking::try::do_call at panicking.rs:483:40 [opt]
    frame #27: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panicking::try at panicking.rs:447:19 [opt]
    frame #28: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panic::catch_unwind at panic.rs:140:14 [opt]
    frame #29: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::rt::lang_start_internal::{{closure}} at rt.rs:148:48 [opt]
    frame #30: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panicking::try::do_call at panicking.rs:483:40 [opt]
    frame #31: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panicking::try at panicking.rs:447:19 [opt]
    frame #32: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal [inlined] std::panic::catch_unwind at panic.rs:140:14 [opt]
    frame #33: 0x0000000100dbbc1c unicorn_1`std::rt::lang_start_internal at rt.rs:148:20 [opt]
    frame #34: 0x0000000100004fe8 unicorn_1`std::rt::lang_start(main=0x00000001000056fc, argc=1, argv=0x000000016fdff5f8, sigpipe=0) at rt.rs:165:17
    frame #35: 0x0000000100005850 unicorn_1`main + 36
    frame #36: 0x0000000198363e50 dyld`start + 2544
  thread #2
    frame #0: 0x0000000198651a68 libsystem_kernel.dylib`__munmap + 8
    frame #1: 0x0000000100013e30 unicorn_1`qemu_ram_munmap(uc=0x0000000102833400, ptr=0x00000001047c0000, size=131072) at oslib-posix.c:271:9
    frame #2: 0x0000000100013de0 unicorn_1`qemu_anon_ram_free(uc=0x0000000102833400, ptr=0x00000001047c0000, size=131072) at oslib-posix.c:148:5
    frame #3: 0x00000001000cf648 unicorn_1`reclaim_ramblock(uc=0x0000000102833400, block=0x0000000101b08c70) at exec.c:1131:9
    frame #4: 0x00000001000cf5f8 unicorn_1`phys_page_compact(uc=0x0000000102833400, lp=0x0000000101b08c70, nodes=0x0000000102833400) at exec.c:193:9
    frame #5: 0x00000001000d4ec0 unicorn_1`memory_region_destructor_ram(mr=0x0000000101b08bd0) at memory.c:886:5
    frame #6: 0x00000001000d3f94 unicorn_1`memory_map_mips(uc=0x0000000101b08bd0, begin=4337120256, size=4323314640, perms=0) at memory.c:48:9
    frame #7: 0x00000001001d706c unicorn_1`release_common(t=0x0000000138018000) at unicorn_common.h:62:5
    frame #8: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x0000000138018000) at unicorn_arm.c:42:5
    frame #9: 0x000000010000b50c unicorn_1`uc_close(uc=0x0000000102833400) at uc.c:443:9
    frame #10: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000101b05db0) at lib.rs:147:22
    frame #11: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000101b05db0) at mod.rs:490:1
    frame #12: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000101b05db0) at mod.rs:490:1
    frame #13: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #14: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #15: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x0000000170001db8) at mod.rs:490:1
    frame #16: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=658) at main.rs:41:5
    frame #17: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170001e90, args=(658)) at function.rs:274:13
    frame #18: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=658) at iterator.rs:829:29
    frame #19: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 659, end = 664), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170001e90) at iterator.rs:2433:21
    frame #20: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 654, end = 664), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #21: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170001f20, iter=(start = 654, end = 664)) at for_each.rs:55:9
    frame #22: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170001f60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170001f68) at mod.rs:110:9
    frame #23: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170001ff0, producer=rayon::range::IterProducer<i32> @ 0x0000000170002074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170002000) at mod.rs:438:13
    frame #24: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001700020ed)) at mod.rs:427:21
    frame #25: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #26: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170002418, stolen=false) at job.rs:96:9
    frame #27: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:158:36
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170002660) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170002750, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170002720, producer=rayon::range::IterProducer<i32> @ 0x00000001700027a4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170002730) at mod.rs:416:47
    frame #31: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017000281d)) at mod.rs:427:21
    frame #32: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #33: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170002b48, stolen=false) at job.rs:96:9
    frame #34: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:158:36
    frame #35: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170002d90) at registry.rs:925:13
    frame #36: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170002e80, oper_b=<unavailable>) at mod.rs:132:5
    frame #37: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170002e50, producer=rayon::range::IterProducer<i32> @ 0x0000000170002ed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170002e60) at mod.rs:416:47
    frame #38: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170002f4d)) at mod.rs:418:21
    frame #39: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #40: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #41: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001700031d8) at panicking.rs:483:40
    frame #42: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #43: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #44: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #45: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #46: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:141:24
    frame #47: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001700037b0) at registry.rs:925:13
    frame #48: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001700038a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #49: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170003870, producer=rayon::range::IterProducer<i32> @ 0x00000001700038f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170003880) at mod.rs:416:47
    frame #50: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017000396d)) at mod.rs:418:21
    frame #51: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #52: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #53: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170003bf8) at panicking.rs:483:40
    frame #54: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #55: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #56: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #57: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #58: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:141:24
    frame #59: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001700041d0) at registry.rs:925:13
    frame #60: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001700042c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #61: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170004290, producer=rayon::range::IterProducer<i32> @ 0x0000000170004314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001700042a0) at mod.rs:416:47
    frame #62: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017000438d)) at mod.rs:418:21
    frame #63: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #64: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #65: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170004618) at panicking.rs:483:40
    frame #66: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #67: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #68: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #69: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #70: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:141:24
    frame #71: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170004bf0) at registry.rs:925:13
    frame #72: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170004ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #73: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170004cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000170004d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170004cc0) at mod.rs:416:47
    frame #74: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170004dad)) at mod.rs:418:21
    frame #75: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #76: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #77: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170005038) at panicking.rs:483:40
    frame #78: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #79: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #80: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #81: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #82: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170006080, injected=false) at mod.rs:141:24
    frame #83: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170005610) at registry.rs:925:13
    frame #84: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170005700, oper_b=<unavailable>) at mod.rs:132:5
    frame #85: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001700056d0, producer=rayon::range::IterProducer<i32> @ 0x0000000170005754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001700056e0) at mod.rs:416:47
    frame #86: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001700057cd)) at mod.rs:427:21
    frame #87: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #88: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #89: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #90: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000170005aa8) at panicking.rs:483:40
    frame #91: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #92: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #93: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #94: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #95: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #96: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #97: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170005de0) at job.rs:58:9
    frame #98: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000170006080, job=rayon_core::job::JobRef @ 0x0000000170005e10) at registry.rs:804:9
    frame #99: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000170006080, latch=0x0000000102012c40) at registry.rs:781:17
    frame #100: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000170006080, latch=0x0000000102012c40) at registry.rs:755:13
    frame #101: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000170006418, registry=(refs:21) {...}, index=0) at registry.rs:889:5
    frame #102: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #103: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #104: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #105: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #106: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #107: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000170006a28) at panicking.rs:483:40
    frame #108: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #109: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #110: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #111: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #112: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c300, (null)=()) at function.rs:250:5
    frame #113: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #114: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #115: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #116: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #3
    frame #0: 0x0000000100012600 unicorn_1`qht_map_create(n_buckets=8192) at qht.c:250:37
    frame #1: 0x0000000100012510 unicorn_1`qht_init(ht=0x00000001083911c8, cmp=(unicorn_1`tb_cmp + 803228 at translate-all.c:985), n_elems=32768, mode=1) at qht.c:264:11
    frame #2: 0x0000000100120888 unicorn_1`tb_htable_init(uc=0x00000001030a3600) at translate-all.c:1002:5
    frame #3: 0x0000000100120790 unicorn_1`tcg_exec_init_arm(uc=0x00000001030a3600, tb_size=0) at translate-all.c:1111:5
    frame #4: 0x000000010000daec unicorn_1`machine_initialize(uc=0x00000001030a3600) at vl.c:53:5
    frame #5: 0x000000010000b940 unicorn_1`uc_init(uc=0x00000001030a3600) at uc.c:229:9
    frame #6: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x00000001030a3600, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #7: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x000000017020ddb8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #8: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=2845) at main.rs:27:9
    frame #9: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x000000017020de90, args=(2845)) at function.rs:274:13
    frame #10: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=2845) at iterator.rs:829:29
    frame #11: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 2846, end = 2846), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x000000017020de90) at iterator.rs:2433:21
    frame #12: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 2841, end = 2846), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #13: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020df20, iter=(start = 2841, end = 2846)) at for_each.rs:55:9
    frame #14: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x000000017020df60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020df68) at mod.rs:110:9
    frame #15: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017020dff0, producer=rayon::range::IterProducer<i32> @ 0x000000017020e074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020e000) at mod.rs:438:13
    frame #16: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017020e0ed)) at mod.rs:418:21
    frame #17: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #18: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #19: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017020e378) at panicking.rs:483:40
    frame #20: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #21: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #22: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #23: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #24: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:141:24
    frame #25: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017020e950) at registry.rs:925:13
    frame #26: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017020ea40, oper_b=<unavailable>) at mod.rs:132:5
    frame #27: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017020ea10, producer=rayon::range::IterProducer<i32> @ 0x000000017020ea94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020ea20) at mod.rs:416:47
    frame #28: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017020eb0d)) at mod.rs:427:21
    frame #29: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #30: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017020ee38, stolen=false) at job.rs:96:9
    frame #31: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:158:36
    frame #32: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017020f080) at registry.rs:925:13
    frame #33: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017020f170, oper_b=<unavailable>) at mod.rs:132:5
    frame #34: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017020f140, producer=rayon::range::IterProducer<i32> @ 0x000000017020f1c4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020f150) at mod.rs:416:47
    frame #35: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017020f23d)) at mod.rs:427:21
    frame #36: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #37: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017020f568, stolen=false) at job.rs:96:9
    frame #38: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:158:36
    frame #39: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017020f7b0) at registry.rs:925:13
    frame #40: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017020f8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #41: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017020f870, producer=rayon::range::IterProducer<i32> @ 0x000000017020f8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017020f880) at mod.rs:416:47
    frame #42: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017020f96d)) at mod.rs:418:21
    frame #43: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #44: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #45: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017020fbf8) at panicking.rs:483:40
    frame #46: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #47: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #48: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #49: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #50: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:141:24
    frame #51: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001702101d0) at registry.rs:925:13
    frame #52: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001702102c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #53: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170210290, producer=rayon::range::IterProducer<i32> @ 0x0000000170210314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001702102a0) at mod.rs:416:47
    frame #54: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017021038d)) at mod.rs:418:21
    frame #55: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #56: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #57: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170210618) at panicking.rs:483:40
    frame #58: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #59: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #60: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #61: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #62: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:141:24
    frame #63: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170210bf0) at registry.rs:925:13
    frame #64: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170210ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #65: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170210cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000170210d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170210cc0) at mod.rs:416:47
    frame #66: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170210dad)) at mod.rs:418:21
    frame #67: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #68: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #69: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170211038) at panicking.rs:483:40
    frame #70: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #71: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #72: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #73: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #74: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170212080, injected=false) at mod.rs:141:24
    frame #75: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170211610) at registry.rs:925:13
    frame #76: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170211700, oper_b=<unavailable>) at mod.rs:132:5
    frame #77: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=313, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001702116d0, producer=rayon::range::IterProducer<i32> @ 0x0000000170211754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001702116e0) at mod.rs:416:47
    frame #78: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001702117cd)) at mod.rs:427:21
    frame #79: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #80: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #81: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #82: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000170211aa8) at panicking.rs:483:40
    frame #83: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #84: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #85: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #86: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #87: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #88: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #89: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170211de0) at job.rs:58:9
    frame #90: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000170212080, job=rayon_core::job::JobRef @ 0x0000000170211e10) at registry.rs:804:9
    frame #91: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000170212080, latch=0x0000000102012ca0) at registry.rs:781:17
    frame #92: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000170212080, latch=0x0000000102012ca0) at registry.rs:755:13
    frame #93: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000170212418, registry=(refs:21) {...}, index=1) at registry.rs:889:5
    frame #94: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #95: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #96: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #97: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #98: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #99: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000170212a28) at panicking.rs:483:40
    frame #100: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #101: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #102: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #103: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #104: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a07500, (null)=()) at function.rs:250:5
    frame #105: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #106: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #107: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #108: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #4
    frame #0: 0x00000001000cd970 unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000118379800, nodes=0x0000000118378000) at exec.c:199:18
    frame #1: 0x00000001000cd9cc unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000118379800, nodes=0x0000000118378000) at exec.c:206:13
    frame #2: 0x00000001000cd9cc unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000118379000, nodes=0x0000000118378000) at exec.c:206:13
    frame #3: 0x00000001000cd9cc unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000118378800, nodes=0x0000000118378000) at exec.c:206:13
    frame #4: 0x00000001000cd9cc unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000118378000, nodes=0x0000000118378000) at exec.c:206:13
    frame #5: 0x00000001000cd9cc unicorn_1`phys_page_compact(uc=0x000000010209dc00, lp=0x0000000101a0f198, nodes=0x0000000118378000) at exec.c:206:13
    frame #6: 0x00000001000cd8e8 unicorn_1`address_space_dispatch_compact_aarch64(d=0x0000000101a0f190) at exec.c:240:9
    frame #7: 0x00000001000d5838 unicorn_1`generate_memory_topology(uc=0x000000010209dc00, mr=0x0000000101a06510) at memory.c:708:5
    frame #8: 0x00000001000d4280 unicorn_1`flatviews_reset(uc=0x000000010209dc00) at memory.c:815:9
    frame #9: 0x00000001000d40d4 unicorn_1`memory_map_mips(uc=0x00000000000000a0, begin=4322293840, size=160, perms=1) at memory.c:45:28
    frame #10: 0x00000001000d72e4 unicorn_1`memory_region_update_container_subregions(subregion=0x0000000101a09a50) at memory.c:1123:5
    frame #11: 0x00000001000d5180 unicorn_1`memory_region_add_subregion_common(mr=0x0000000101a0f850, offset=2148532224, subregion=0x0000000101a09a50) at memory.c:1134:5
    frame #12: 0x00000001000d3810 unicorn_1`memory_map_mips(uc=0x0000000080100000, begin=4322293840, size=2148532224, perms=1) at memory.c:43:25
    frame #13: 0x00000001000d370c unicorn_1`memory_map_mips(uc=0x000000010209dc00, begin=2148532224, size=4096, perms=7) at memory.c:52:5
    frame #14: 0x000000010000cce4 unicorn_1`uc_mem_map(uc=0x000000010209dc00, address=2148532224, size=4096, perms=7) at uc.c:1064:20
    frame #15: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x0000000170419ac8, address=2148532224, size=4096, perms=(bits = 7)) at lib.rs:346:28
    frame #16: 0x0000000100006944 unicorn_1`unicorn_1::main::{{closure}}(num=3779) at main.rs:28:9
    frame #17: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170419ba0, args=(3779)) at function.rs:274:13
    frame #18: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=3779) at iterator.rs:829:29
    frame #19: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 3780, end = 3789), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170419ba0) at iterator.rs:2433:21
    frame #20: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 3769, end = 3789), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #21: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170419c30, iter=(start = 3769, end = 3789)) at for_each.rs:55:9
    frame #22: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170419c70, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170419c78) at mod.rs:110:9
    frame #23: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170419d00, producer=rayon::range::IterProducer<i32> @ 0x0000000170419d84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170419d10) at mod.rs:438:13
    frame #24: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170419dfd)) at mod.rs:427:21
    frame #25: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #26: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017041a128, stolen=false) at job.rs:96:9
    frame #27: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:158:36
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041a370) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041a460, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041a430, producer=rayon::range::IterProducer<i32> @ 0x000000017041a4b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041a440) at mod.rs:416:47
    frame #31: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041a52d)) at mod.rs:418:21
    frame #32: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #33: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #34: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017041a7b8) at panicking.rs:483:40
    frame #35: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #36: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #37: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #38: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #39: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:141:24
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041ad90) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041ae80, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041ae50, producer=rayon::range::IterProducer<i32> @ 0x000000017041aed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041ae60) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041af4d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017041b1d8) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041b7b0) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041b8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041b870, producer=rayon::range::IterProducer<i32> @ 0x000000017041b8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041b880) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041b96d)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017041bbf8) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041c1d0) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041c2c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041c290, producer=rayon::range::IterProducer<i32> @ 0x000000017041c314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041c2a0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041c38d)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017041c618) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041cbf0) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041cce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041ccb0, producer=rayon::range::IterProducer<i32> @ 0x000000017041cd34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041ccc0) at mod.rs:416:47
    frame #79: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041cdad)) at mod.rs:418:21
    frame #80: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #81: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #82: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017041d038) at panicking.rs:483:40
    frame #83: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #84: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #85: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #86: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #87: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017041e080, injected=false) at mod.rs:141:24
    frame #88: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017041d610) at registry.rs:925:13
    frame #89: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017041d700, oper_b=<unavailable>) at mod.rs:132:5
    frame #90: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017041d6d0, producer=rayon::range::IterProducer<i32> @ 0x000000017041d754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017041d6e0) at mod.rs:416:47
    frame #91: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017041d7cd)) at mod.rs:427:21
    frame #92: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #93: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #94: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #95: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x000000017041daa8) at panicking.rs:483:40
    frame #96: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #97: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #98: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #99: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #100: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #101: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #102: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x000000017041dde0) at job.rs:58:9
    frame #103: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x000000017041e080, job=rayon_core::job::JobRef @ 0x000000017041de10) at registry.rs:804:9
    frame #104: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x000000017041e080, latch=0x0000000102012d00) at registry.rs:781:17
    frame #105: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x000000017041e080, latch=0x0000000102012d00) at registry.rs:755:13
    frame #106: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x000000017041e418, registry=(refs:21) {...}, index=2) at registry.rs:889:5
    frame #107: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #108: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #109: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #110: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #111: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #112: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x000000017041ea28) at panicking.rs:483:40
    frame #113: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #114: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #115: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #116: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #117: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a07300, (null)=()) at function.rs:250:5
    frame #118: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #120: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #121: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #5
    frame #0: 0x000000019864ed04 libsystem_kernel.dylib`__mmap + 8
    frame #1: 0x000000019864ec98 libsystem_kernel.dylib`mmap + 60
    frame #2: 0x0000000100013b70 unicorn_1`qemu_ram_mmap(uc=0x0000000102880a00, size=16384, align=16384, shared=false) at oslib-posix.c:211:16
    frame #3: 0x0000000100013aac unicorn_1`qemu_anon_ram_alloc(uc=0x0000000102880a00, size=16384, alignment=0x0000000101b07760) at oslib-posix.c:113:17
    frame #4: 0x00000001000cf324 unicorn_1`ram_block_add(uc=0x0000000102880a00, new_block=0x0000000101b07880) at exec.c:1043:27
    frame #5: 0x00000001000cf284 unicorn_1`phys_page_compact(uc=0x0000000101a07100, lp=0x0000000102880a00, nodes=0x0000000101b07710) at exec.c:215:5
    frame #6: 0x00000001000cf560 unicorn_1`address_space_dispatch_compact_aarch64(d=0x0000000101b07710) at exec.c:240:30
    frame #7: 0x00000001000d37d4 unicorn_1`memory_map_mips(uc=0x0000000101b07710, begin=4337437184, size=4323309328, perms=0) at memory.c:54:9
    frame #8: 0x00000001000d36c4 unicorn_1`memory_map_mips(uc=0x0000000102880a00, begin=2148532224, size=4096, perms=7) at memory.c:45:5
    frame #9: 0x000000010000cce4 unicorn_1`uc_mem_map(uc=0x0000000102880a00, address=2148532224, size=4096, perms=7) at uc.c:1064:20
    frame #10: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x0000000170624e28, address=2148532224, size=4096, perms=(bits = 7)) at lib.rs:346:28
    frame #11: 0x0000000100006944 unicorn_1`unicorn_1::main::{{closure}}(num=33) at main.rs:28:9
    frame #12: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170624f00, args=(33)) at function.rs:274:13
    frame #13: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=33) at iterator.rs:829:29
    frame #14: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 34, end = 78), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170624f00) at iterator.rs:2433:21
    frame #15: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 0, end = 78), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #16: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170624f90, iter=(start = 0, end = 78)) at for_each.rs:55:9
    frame #17: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170624fd0, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170624fd8) at mod.rs:110:9
    frame #18: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170625060, producer=rayon::range::IterProducer<i32> @ 0x00000001706250e4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170625070) at mod.rs:438:13
    frame #19: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017062515d)) at mod.rs:418:21
    frame #20: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #21: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #22: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001706253e8) at panicking.rs:483:40
    frame #23: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #24: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #25: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #26: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #27: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001706259c0) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170625ab0, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170625a80, producer=rayon::range::IterProducer<i32> @ 0x0000000170625b04, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170625a90) at mod.rs:416:47
    frame #31: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170625b7d)) at mod.rs:418:21
    frame #32: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #33: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #34: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170625e08) at panicking.rs:483:40
    frame #35: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #36: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #37: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #38: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #39: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001706263e0) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001706264d0, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001706264a0, producer=rayon::range::IterProducer<i32> @ 0x0000000170626524, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001706264b0) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017062659d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170626828) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170626e00) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170626ef0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170626ec0, producer=rayon::range::IterProducer<i32> @ 0x0000000170626f44, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170626ed0) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170626fbd)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170627248) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170627820) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170627910, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001706278e0, producer=rayon::range::IterProducer<i32> @ 0x0000000170627964, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001706278f0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001706279dd)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170627c68) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170628240) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170628330, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=2500, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170628300, producer=rayon::range::IterProducer<i32> @ 0x0000000170628384, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170628310) at mod.rs:416:47
    frame #79: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001706283fd)) at mod.rs:418:21
    frame #80: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #81: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #82: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170628688) at panicking.rs:483:40
    frame #83: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #84: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #85: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #86: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #87: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=false) at mod.rs:141:24
    frame #88: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170628c60) at registry.rs:925:13
    frame #89: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170628d50, oper_b=<unavailable>) at mod.rs:132:5
    frame #90: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5000, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170628d20, producer=rayon::range::IterProducer<i32> @ 0x0000000170628da4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170628d30) at mod.rs:416:47
    frame #91: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170628e1d)) at mod.rs:418:21
    frame #92: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #93: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #94: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001706290a8) at panicking.rs:483:40
    frame #95: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #96: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #97: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #98: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #99: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017062a080, injected=true) at mod.rs:141:24
    frame #100: 0x0000000100006664 unicorn_1`rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}}(injected=true) at registry.rs:506:21
    frame #101: 0x0000000100007c7c unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #102: 0x0000000100006b00 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #103: 0x0000000100005384 unicorn_1`std::panicking::try::do_call(data=0x0000000170629948) at panicking.rs:483:40
    frame #104: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #105: 0x00000001000051a0 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #106: 0x0000000100008ba4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #107: 0x0000000100008c64 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #108: 0x0000000100007b28 unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #109: 0x0000000100008344 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #110: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170629de0) at job.rs:58:9
    frame #111: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x000000017062a080, job=rayon_core::job::JobRef @ 0x0000000170629e10) at registry.rs:804:9
    frame #112: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x000000017062a080, latch=0x0000000102012d60) at registry.rs:781:17
    frame #113: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x000000017062a080, latch=0x0000000102012d60) at registry.rs:755:13
    frame #114: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x000000017062a418, registry=(refs:21) {...}, index=3) at registry.rs:889:5
    frame #115: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #116: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #117: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #118: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #119: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #120: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x000000017062aa28) at panicking.rs:483:40
    frame #121: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #122: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #123: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #124: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #125: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a07100, (null)=()) at function.rs:250:5
    frame #126: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #127: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #128: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #129: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #6
    frame #0: 0x000000019864ed04 libsystem_kernel.dylib`__mmap + 8
    frame #1: 0x000000019864ec98 libsystem_kernel.dylib`mmap + 60
    frame #2: 0x0000000100122cb0 unicorn_1`alloc_code_gen_buffer(uc=0x000000010389b000) at translate-all.c:925:11
    frame #3: 0x00000001001208cc unicorn_1`code_gen_alloc(uc=0x000000010389b000, tb_size=0) at translate-all.c:975:32
    frame #4: 0x000000010012079c unicorn_1`tcg_exec_init_arm(uc=0x000000010389b000, tb_size=0) at translate-all.c:1112:5
    frame #5: 0x000000010000daec unicorn_1`machine_initialize(uc=0x000000010389b000) at vl.c:53:5
    frame #6: 0x000000010000b940 unicorn_1`uc_init(uc=0x000000010389b000) at uc.c:229:9
    frame #7: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x000000010389b000, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #8: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x0000000170831db8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #9: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=343) at main.rs:27:9
    frame #10: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170831e90, args=(343)) at function.rs:274:13
    frame #11: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=343) at iterator.rs:829:29
    frame #12: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 344, end = 346), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170831e90) at iterator.rs:2433:21
    frame #13: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 341, end = 346), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #14: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170831f20, iter=(start = 341, end = 346)) at for_each.rs:55:9
    frame #15: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170831f60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170831f68) at mod.rs:110:9
    frame #16: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170831ff0, producer=rayon::range::IterProducer<i32> @ 0x0000000170832074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170832000) at mod.rs:438:13
    frame #17: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001708320ed)) at mod.rs:418:21
    frame #18: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #19: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #20: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170832378) at panicking.rs:483:40
    frame #21: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #22: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #23: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #24: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #25: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:141:24
    frame #26: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170832950) at registry.rs:925:13
    frame #27: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170832a40, oper_b=<unavailable>) at mod.rs:132:5
    frame #28: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170832a10, producer=rayon::range::IterProducer<i32> @ 0x0000000170832a94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170832a20) at mod.rs:416:47
    frame #29: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170832b0d)) at mod.rs:427:21
    frame #30: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #31: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170832e38, stolen=false) at job.rs:96:9
    frame #32: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:158:36
    frame #33: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170833080) at registry.rs:925:13
    frame #34: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170833170, oper_b=<unavailable>) at mod.rs:132:5
    frame #35: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170833140, producer=rayon::range::IterProducer<i32> @ 0x00000001708331c4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170833150) at mod.rs:416:47
    frame #36: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017083323d)) at mod.rs:427:21
    frame #37: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #38: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170833568, stolen=false) at job.rs:96:9
    frame #39: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:158:36
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001708337b0) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001708338a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170833870, producer=rayon::range::IterProducer<i32> @ 0x00000001708338f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170833880) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017083396d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170833bf8) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001708341d0) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001708342c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170834290, producer=rayon::range::IterProducer<i32> @ 0x0000000170834314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001708342a0) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017083438d)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170834618) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170834bf0) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170834ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170834cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000170834d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170834cc0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170834dad)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170835038) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170836080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170835610) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170835700, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=313, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001708356d0, producer=rayon::range::IterProducer<i32> @ 0x0000000170835754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001708356e0) at mod.rs:416:47
    frame #79: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001708357cd)) at mod.rs:427:21
    frame #80: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #81: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #82: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #83: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000170835aa8) at panicking.rs:483:40
    frame #84: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #85: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #86: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #87: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #88: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #89: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #90: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170835de0) at job.rs:58:9
    frame #91: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000170836080, job=rayon_core::job::JobRef @ 0x0000000170835e10) at registry.rs:804:9
    frame #92: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000170836080, latch=0x0000000102012dc0) at registry.rs:781:17
    frame #93: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000170836080, latch=0x0000000102012dc0) at registry.rs:755:13
    frame #94: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000170836418, registry=(refs:21) {...}, index=4) at registry.rs:889:5
    frame #95: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #96: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #97: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #98: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #99: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #100: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000170836a28) at panicking.rs:483:40
    frame #101: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #102: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #103: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #104: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #105: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a06ef0, (null)=()) at function.rs:250:5
    frame #106: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #107: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #108: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #109: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #7
    frame #0: 0x00000001986bbed0 libsystem_platform.dylib`_platform_memmove
    frame #1: 0x00000001000d2790 unicorn_1`phys_map_node_alloc(map=0x0000000101c07a10, leaf=true) at exec.c:139:9
    frame #2: 0x00000001000d24f0 unicorn_1`phys_page_set_level(map=0x0000000101c07a10, lp=0x00000001082ba008, index=0x0000000170a3d6f0, nb=0x0000000170a3d6e8, leaf=1, level=0) at exec.c:152:19
    frame #3: 0x00000001000d2638 unicorn_1`phys_page_set_level(map=0x0000000101c07a10, lp=0x00000001082ba008, index=0x0000000170a3d6f0, nb=0x0000000170a3d6e8, leaf=1, level=1) at exec.c:164:13
  thread #8
    frame #0: 0x0000000198651a68 libsystem_kernel.dylib`__munmap + 8
    frame #1: 0x0000000100013e30 unicorn_1`qemu_ram_munmap(uc=0x000000010500c600, ptr=0x0000000104630000, size=16384) at oslib-posix.c:271:9
    frame #2: 0x0000000100013de0 unicorn_1`qemu_anon_ram_free(uc=0x000000010500c600, ptr=0x0000000104630000, size=16384) at oslib-posix.c:148:5
    frame #3: 0x00000001000cf648 unicorn_1`reclaim_ramblock(uc=0x000000010500c600, block=0x00000001041046a0) at exec.c:1131:9
    frame #4: 0x00000001000cf5f8 unicorn_1`phys_page_compact(uc=0x000000010500c600, lp=0x00000001041046a0, nodes=0x000000010500c600) at exec.c:193:9
    frame #5: 0x00000001000d4ec0 unicorn_1`memory_region_destructor_ram(mr=0x0000000104104600) at memory.c:886:5
    frame #6: 0x00000001000d3f94 unicorn_1`memory_map_mips(uc=0x0000000104104600, begin=4378904064, size=4363142656, perms=1) at memory.c:48:9
    frame #7: 0x00000001001d706c unicorn_1`release_common(t=0x00000001103d8000) at unicorn_common.h:62:5
    frame #8: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x00000001103d8000) at unicorn_arm.c:42:5
    frame #9: 0x000000010000b50c unicorn_1`uc_close(uc=0x000000010500c600) at uc.c:443:9
    frame #10: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000104106920) at lib.rs:147:22
    frame #11: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000104106920) at mod.rs:490:1
    frame #12: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000104106920) at mod.rs:490:1
    frame #13: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #14: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #15: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x0000000170c49ac8) at mod.rs:490:1
    frame #16: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=9402) at main.rs:41:5
    frame #17: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170c49ba0, args=(9402)) at function.rs:274:13
    frame #18: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=9402) at iterator.rs:829:29
    frame #19: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 9403, end = 9404), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170c49ba0) at iterator.rs:2433:21
    frame #20: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 9394, end = 9404), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #21: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c49c30, iter=(start = 9394, end = 9404)) at for_each.rs:55:9
    frame #22: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170c49c70, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c49c78) at mod.rs:110:9
    frame #23: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c49d00, producer=rayon::range::IterProducer<i32> @ 0x0000000170c49d84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c49d10) at mod.rs:438:13
    frame #24: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c49dfd)) at mod.rs:418:21
    frame #25: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #26: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #27: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170c4a088) at panicking.rs:483:40
    frame #28: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #29: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #30: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #31: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #32: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:141:24
    frame #33: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4a660) at registry.rs:925:13
    frame #34: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4a750, oper_b=<unavailable>) at mod.rs:132:5
    frame #35: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4a720, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4a7a4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4a730) at mod.rs:416:47
    frame #36: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4a81d)) at mod.rs:427:21
    frame #37: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #38: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170c4ab48, stolen=false) at job.rs:96:9
    frame #39: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:158:36
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4ad90) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4ae80, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4ae50, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4aed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4ae60) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4af4d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170c4b1d8) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4b7b0) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4b8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4b870, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4b8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4b880) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4b96d)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170c4bbf8) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4c1d0) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4c2c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4c290, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4c314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4c2a0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4c38d)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170c4c618) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4cbf0) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4cce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4ccb0, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4cd34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4ccc0) at mod.rs:416:47
    frame #79: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4cdad)) at mod.rs:418:21
    frame #80: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #81: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #82: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170c4d038) at panicking.rs:483:40
    frame #83: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #84: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #85: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #86: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #87: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170c4e080, injected=false) at mod.rs:141:24
    frame #88: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170c4d610) at registry.rs:925:13
    frame #89: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170c4d700, oper_b=<unavailable>) at mod.rs:132:5
    frame #90: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170c4d6d0, producer=rayon::range::IterProducer<i32> @ 0x0000000170c4d754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170c4d6e0) at mod.rs:416:47
    frame #91: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170c4d7cd)) at mod.rs:427:21
    frame #92: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #93: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #94: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #95: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000170c4daa8) at panicking.rs:483:40
    frame #96: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #97: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #98: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #99: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #100: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #101: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #102: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170c4dde0) at job.rs:58:9
    frame #103: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000170c4e080, job=rayon_core::job::JobRef @ 0x0000000170c4de10) at registry.rs:804:9
    frame #104: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000170c4e080, latch=0x0000000102012e80) at registry.rs:781:17
    frame #105: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000170c4e080, latch=0x0000000102012e80) at registry.rs:755:13
    frame #106: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000170c4e418, registry=(refs:21) {...}, index=6) at registry.rs:889:5
    frame #107: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #108: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #109: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #110: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #111: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #112: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000170c4ea28) at panicking.rs:483:40
    frame #113: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #114: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #115: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #116: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #117: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a06640, (null)=()) at function.rs:250:5
    frame #118: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #120: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #121: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
* thread #9, stop reason = EXC_BAD_ACCESS (code=1, address=0x28000002c)
  * frame #0: 0x000000028000002c
    frame #1: 0x000000028000002c
    frame #2: 0x0000000100110064 unicorn_1`cpu_tb_exec(cpu=0x0000000148148000, itb=0x0000000640000700) at cpu-exec.c:60:11
    frame #3: 0x000000010010f6d0 unicorn_1`cpu_loop_exec_tb(cpu=0x0000000148148000, tb=0x0000000640000700, last_tb=0x0000000170e558b0, tb_exit=0x0000000170e558ac) at cpu-exec.c:502:11
    frame #4: 0x000000010010ee44 unicorn_1`tb_hash_func(phys_pc=72057598332942900, pc=0, flags=0, cf_mask=0, trace_vcpu_dstate=6) at tb-hash.h:54:45
    frame #5: 0x00000001000d3410 unicorn_1`tcg_cpu_exec(uc=0x0000000107034400) at cpus.c:96:17
    frame #6: 0x00000001000d3340 unicorn_1`cpu_get_clock_mips - 18446744069413719231
    frame #7: 0x00000001000d35dc unicorn_1`cpu_icount_to_ns_mips(icount=<unavailable>) - 18446744069413718563
    frame #8: 0x000000010000c43c unicorn_1`uc_emu_start(uc=0x0000000107034400, begin=2147483649, until=2147483663, timeout=0, count=<unavailable>) at uc.c:880:5
    frame #9: 0x00000001000077dc unicorn_1`unicorn_engine::Unicorn<D>::emu_start(self=0x0000000170e55ac8, begin=2147483649, until=2147483663, timeout=0, count=2000) at lib.rs:980:23
    frame #10: 0x0000000100006a34 unicorn_1`unicorn_1::main::{{closure}}(num=8782) at main.rs:34:9
    frame #11: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000170e55ba0, args=(8782)) at function.rs:274:13
    frame #12: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=8782) at iterator.rs:829:29
    frame #13: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 8783, end = 8789), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000170e55ba0) at iterator.rs:2433:21
    frame #14: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 8769, end = 8789), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #15: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e55c30, iter=(start = 8769, end = 8789)) at for_each.rs:55:9
    frame #16: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000170e55c70, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e55c78) at mod.rs:110:9
    frame #17: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e55d00, producer=rayon::range::IterProducer<i32> @ 0x0000000170e55d84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e55d10) at mod.rs:438:13
    frame #18: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e55dfd)) at mod.rs:427:21
    frame #19: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #20: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000170e56128, stolen=false) at job.rs:96:9
    frame #21: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:158:36
    frame #22: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e56370) at registry.rs:925:13
    frame #23: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e56460, oper_b=<unavailable>) at mod.rs:132:5
    frame #24: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e56430, producer=rayon::range::IterProducer<i32> @ 0x0000000170e564b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e56440) at mod.rs:416:47
    frame #25: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e5652d)) at mod.rs:418:21
    frame #26: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #27: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #28: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170e567b8) at panicking.rs:483:40
    frame #29: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #30: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #31: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #32: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #33: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:141:24
    frame #34: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e56d90) at registry.rs:925:13
    frame #35: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e56e80, oper_b=<unavailable>) at mod.rs:132:5
    frame #36: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e56e50, producer=rayon::range::IterProducer<i32> @ 0x0000000170e56ed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e56e60) at mod.rs:416:47
    frame #37: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e56f4d)) at mod.rs:418:21
    frame #38: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #39: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #40: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170e571d8) at panicking.rs:483:40
    frame #41: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #42: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #43: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #44: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #45: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:141:24
    frame #46: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e577b0) at registry.rs:925:13
    frame #47: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e578a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #48: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e57870, producer=rayon::range::IterProducer<i32> @ 0x0000000170e578f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e57880) at mod.rs:416:47
    frame #49: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e5796d)) at mod.rs:418:21
    frame #50: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #51: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #52: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170e57bf8) at panicking.rs:483:40
    frame #53: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #54: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #55: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #56: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #57: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:141:24
    frame #58: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e581d0) at registry.rs:925:13
    frame #59: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e582c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #60: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e58290, producer=rayon::range::IterProducer<i32> @ 0x0000000170e58314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e582a0) at mod.rs:416:47
    frame #61: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e5838d)) at mod.rs:418:21
    frame #62: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #63: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #64: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170e58618) at panicking.rs:483:40
    frame #65: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #66: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #67: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #68: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #69: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:141:24
    frame #70: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e58bf0) at registry.rs:925:13
    frame #71: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e58ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #72: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e58cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000170e58d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e58cc0) at mod.rs:416:47
    frame #73: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e58dad)) at mod.rs:418:21
    frame #74: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #75: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #76: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000170e59038) at panicking.rs:483:40
    frame #77: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #78: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #79: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #80: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #81: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000170e5a080, injected=false) at mod.rs:141:24
    frame #82: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000170e59610) at registry.rs:925:13
    frame #83: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000170e59700, oper_b=<unavailable>) at mod.rs:132:5
    frame #84: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000170e596d0, producer=rayon::range::IterProducer<i32> @ 0x0000000170e59754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000170e596e0) at mod.rs:416:47
    frame #85: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000170e597cd)) at mod.rs:427:21
    frame #86: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #87: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #88: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #89: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000170e59aa8) at panicking.rs:483:40
    frame #90: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #91: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #92: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #93: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #94: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #95: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #96: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000170e59de0) at job.rs:58:9
    frame #97: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000170e5a080, job=rayon_core::job::JobRef @ 0x0000000170e59e10) at registry.rs:804:9
    frame #98: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000170e5a080, latch=0x0000000102012ee0) at registry.rs:781:17
    frame #99: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000170e5a080, latch=0x0000000102012ee0) at registry.rs:755:13
    frame #100: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000170e5a418, registry=(refs:21) {...}, index=7) at registry.rs:889:5
    frame #101: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #102: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #103: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #104: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #105: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #106: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000170e5aa28) at panicking.rs:483:40
    frame #107: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #108: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #109: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #110: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #111: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a066c0, (null)=()) at function.rs:250:5
    frame #112: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #113: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #114: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #115: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #10
    frame #0: 0x00000001000e52c4 unicorn_1`tcg_optimize_mipsel(s=0x00000001082c8000) at optimize.c:1103:9
    frame #1: 0x00000001000e4264 unicorn_1`tcg_optimize_mipsel(s=0x00000001082c8000) at optimize.c:648:23
    frame #2: 0x00000001000ee368 unicorn_1`gen_new_label_x86_64(s=0x0000000000000000) at tcg.c:263:11
    frame #3: 0x0000000100121604 unicorn_1`tb_gen_code_arm(cpu=0x00000001082e8000, pc=2147483654, cs_base=0, flags=84022528, cflags=-16777216) at translate-all.c:1665:21
    frame #4: 0x000000010010f4a4 unicorn_1`tb_find(cpu=0x00000001082e8000, last_tb=0x00000006c0000080, tb_exit=0, cf_mask=0) at cpu-exec.c:259:14
    frame #5: 0x000000010010ee18 unicorn_1`tb_hash_func(phys_pc=72057598332942900, pc=28991029376, flags=0, cf_mask=0, trace_vcpu_dstate=6) at tb-hash.h:53
    frame #6: 0x00000001000d3410 unicorn_1`tcg_cpu_exec(uc=0x000000010301e800) at cpus.c:96:17
    frame #7: 0x00000001000d3340 unicorn_1`cpu_get_clock_mips - 18446744069413719231
    frame #8: 0x00000001000d35dc unicorn_1`cpu_icount_to_ns_mips(icount=<unavailable>) - 18446744069413718563
    frame #9: 0x000000010000c43c unicorn_1`uc_emu_start(uc=0x000000010301e800, begin=2147483649, until=2147483663, timeout=0, count=<unavailable>) at uc.c:880:5
    frame #10: 0x00000001000077dc unicorn_1`unicorn_engine::Unicorn<D>::emu_start(self=0x0000000171061db8, begin=2147483649, until=2147483663, timeout=0, count=2000) at lib.rs:980:23
    frame #11: 0x0000000100006a34 unicorn_1`unicorn_1::main::{{closure}}(num=8157) at main.rs:34:9
    frame #12: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000171061e90, args=(8157)) at function.rs:274:13
    frame #13: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=8157) at iterator.rs:829:29
    frame #14: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 8158, end = 8164), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000171061e90) at iterator.rs:2433:21
    frame #15: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 8154, end = 8164), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #16: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171061f20, iter=(start = 8154, end = 8164)) at for_each.rs:55:9
    frame #17: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000171061f60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171061f68) at mod.rs:110:9
    frame #18: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171061ff0, producer=rayon::range::IterProducer<i32> @ 0x0000000171062074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171062000) at mod.rs:438:13
    frame #19: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001710620ed)) at mod.rs:427:21
    frame #20: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #21: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000171062418, stolen=false) at job.rs:96:9
    frame #22: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:158:36
    frame #23: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171062660) at registry.rs:925:13
    frame #24: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171062750, oper_b=<unavailable>) at mod.rs:132:5
    frame #25: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171062720, producer=rayon::range::IterProducer<i32> @ 0x00000001710627a4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171062730) at mod.rs:416:47
    frame #26: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017106281d)) at mod.rs:427:21
    frame #27: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #28: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000171062b48, stolen=false) at job.rs:96:9
    frame #29: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:158:36
    frame #30: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171062d90) at registry.rs:925:13
    frame #31: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171062e80, oper_b=<unavailable>) at mod.rs:132:5
    frame #32: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171062e50, producer=rayon::range::IterProducer<i32> @ 0x0000000171062ed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171062e60) at mod.rs:416:47
    frame #33: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171062f4d)) at mod.rs:418:21
    frame #34: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #35: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #36: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001710631d8) at panicking.rs:483:40
    frame #37: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #38: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #39: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #40: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #41: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:141:24
    frame #42: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001710637b0) at registry.rs:925:13
    frame #43: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001710638a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #44: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171063870, producer=rayon::range::IterProducer<i32> @ 0x00000001710638f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171063880) at mod.rs:416:47
    frame #45: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017106396d)) at mod.rs:418:21
    frame #46: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #47: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #48: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171063bf8) at panicking.rs:483:40
    frame #49: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #50: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #51: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #52: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #53: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:141:24
    frame #54: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001710641d0) at registry.rs:925:13
    frame #55: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001710642c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #56: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171064290, producer=rayon::range::IterProducer<i32> @ 0x0000000171064314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001710642a0) at mod.rs:416:47
    frame #57: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017106438d)) at mod.rs:418:21
    frame #58: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #59: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #60: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171064618) at panicking.rs:483:40
    frame #61: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #62: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #63: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #64: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #65: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:141:24
    frame #66: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171064bf0) at registry.rs:925:13
    frame #67: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171064ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #68: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171064cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171064d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171064cc0) at mod.rs:416:47
    frame #69: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171064dad)) at mod.rs:418:21
    frame #70: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #71: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #72: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171065038) at panicking.rs:483:40
    frame #73: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #74: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #75: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #76: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #77: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171066080, injected=false) at mod.rs:141:24
    frame #78: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171065610) at registry.rs:925:13
    frame #79: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171065700, oper_b=<unavailable>) at mod.rs:132:5
    frame #80: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001710656d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171065754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001710656e0) at mod.rs:416:47
    frame #81: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001710657cd)) at mod.rs:427:21
    frame #82: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #83: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #84: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #85: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171065aa8) at panicking.rs:483:40
    frame #86: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #87: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #88: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #89: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #90: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #91: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #92: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171065de0) at job.rs:58:9
    frame #93: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000171066080, job=rayon_core::job::JobRef @ 0x0000000171065e10) at registry.rs:804:9
    frame #94: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000171066080, latch=0x0000000102012f40) at registry.rs:781:17
    frame #95: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000171066080, latch=0x0000000102012f40) at registry.rs:755:13
    frame #96: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000171066418, registry=(refs:21) {...}, index=8) at registry.rs:889:5
    frame #97: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #98: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #99: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #100: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #101: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #102: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000171066a28) at panicking.rs:483:40
    frame #103: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #104: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #105: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #106: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #107: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c620, (null)=()) at function.rs:250:5
    frame #108: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #109: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #110: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #111: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #11
    frame #0: 0x000000010000f14c unicorn_1`g_hash_table_lookup_node_for_insertion(hash_table=0x0000000101b09430, key=0x00000001001d0e70, hash_return=0x000000017126e0f0) at glib_compat.c:614:9
    frame #1: 0x000000010000e610 unicorn_1`g_hash_table_insert_internal(hash_table=0x0000000101b09430, key=0x00000001001d0e70, value=0x0000000100e6bb28, keep_new_key=0) at glib_compat.c:796:18
    frame #2: 0x000000010000e788 unicorn_1`g_hash_table_insert(hash_table=0x0000000101b09430, key=0x00000001001d0e70, value=0x0000000100e6bb28) at glib_compat.c:863:5
    frame #3: 0x00000001000eac5c unicorn_1`tb_target_set_jmp_target_x86_64(tc_ptr=5234655232, jmp_addr=760209211856, addr=12884902031) at tcg-target.inc.c:1362:56
    frame #4: 0x000000010012076c unicorn_1`tcg_exec_init_arm(uc=0x0000000102870a00, tb_size=0) at translate-all.c:1108:5
    frame #5: 0x000000010000daec unicorn_1`machine_initialize(uc=0x0000000102870a00) at vl.c:53:5
    frame #6: 0x000000010000b940 unicorn_1`uc_init(uc=0x0000000102870a00) at uc.c:229:9
    frame #7: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x0000000102870a00, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #8: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x000000017126e398, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #9: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=1755) at main.rs:27:9
    frame #10: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x000000017126e470, args=(1755)) at function.rs:274:13
    frame #11: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=1755) at iterator.rs:829:29
    frame #12: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 1756, end = 1757), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x000000017126e470) at iterator.rs:2433:21
    frame #13: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 1754, end = 1757), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #14: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126e500, iter=(start = 1754, end = 1757)) at for_each.rs:55:9
    frame #15: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x000000017126e540, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126e548) at mod.rs:110:9
    frame #16: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=3, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017126e5d0, producer=rayon::range::IterProducer<i32> @ 0x000000017126e654, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126e5e0) at mod.rs:438:13
    frame #17: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017126e6cd)) at mod.rs:427:21
    frame #18: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #19: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017126e9f8, stolen=false) at job.rs:96:9
    frame #20: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:158:36
    frame #21: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017126ec40) at registry.rs:925:13
    frame #22: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017126ed30, oper_b=<unavailable>) at mod.rs:132:5
    frame #23: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017126ed00, producer=rayon::range::IterProducer<i32> @ 0x000000017126ed84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126ed10) at mod.rs:416:47
    frame #24: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017126edfd)) at mod.rs:427:21
    frame #25: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #26: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017126f128, stolen=false) at job.rs:96:9
    frame #27: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:158:36
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017126f370) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017126f460, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017126f430, producer=rayon::range::IterProducer<i32> @ 0x000000017126f4b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126f440) at mod.rs:416:47
    frame #31: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017126f52d)) at mod.rs:427:21
    frame #32: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #33: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017126f858, stolen=false) at job.rs:96:9
    frame #34: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:158:36
    frame #35: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017126faa0) at registry.rs:925:13
    frame #36: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017126fb90, oper_b=<unavailable>) at mod.rs:132:5
    frame #37: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017126fb60, producer=rayon::range::IterProducer<i32> @ 0x000000017126fbe4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017126fb70) at mod.rs:416:47
    frame #38: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017126fc5d)) at mod.rs:427:21
    frame #39: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #40: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017126ff88, stolen=false) at job.rs:96:9
    frame #41: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:158:36
    frame #42: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001712701d0) at registry.rs:925:13
    frame #43: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001712702c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #44: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171270290, producer=rayon::range::IterProducer<i32> @ 0x0000000171270314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001712702a0) at mod.rs:416:47
    frame #45: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017127038d)) at mod.rs:418:21
    frame #46: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #47: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #48: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171270618) at panicking.rs:483:40
    frame #49: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #50: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #51: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #52: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #53: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:141:24
    frame #54: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171270bf0) at registry.rs:925:13
    frame #55: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171270ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #56: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171270cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171270d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171270cc0) at mod.rs:416:47
    frame #57: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171270dad)) at mod.rs:418:21
    frame #58: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #59: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #60: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171271038) at panicking.rs:483:40
    frame #61: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #62: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #63: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #64: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #65: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171272080, injected=false) at mod.rs:141:24
    frame #66: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171271610) at registry.rs:925:13
    frame #67: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171271700, oper_b=<unavailable>) at mod.rs:132:5
    frame #68: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=157, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001712716d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171271754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001712716e0) at mod.rs:416:47
    frame #69: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001712717cd)) at mod.rs:427:21
    frame #70: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #71: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #72: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #73: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171271aa8) at panicking.rs:483:40
    frame #74: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #75: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #76: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #77: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #78: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #79: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #80: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171271de0) at job.rs:58:9
    frame #81: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000171272080, job=rayon_core::job::JobRef @ 0x0000000171271e10) at registry.rs:804:9
    frame #82: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000171272080, latch=0x0000000102012fa0) at registry.rs:781:17
    frame #83: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000171272080, latch=0x0000000102012fa0) at registry.rs:755:13
    frame #84: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000171272418, registry=(refs:21) {...}, index=9) at registry.rs:889:5
    frame #85: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #86: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #87: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #88: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #89: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #90: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000171272a28) at panicking.rs:483:40
    frame #91: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #92: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #93: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #94: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #95: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c6a0, (null)=()) at function.rs:250:5
    frame #96: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #97: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #98: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #99: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #12
    frame #0: 0x0000000198651a68 libsystem_kernel.dylib`__munmap + 8
    frame #1: 0x0000000100013e30 unicorn_1`qemu_ram_munmap(uc=0x000000010480a600, ptr=0x0000000104668000, size=16384) at oslib-posix.c:271:9
    frame #2: 0x0000000100013de0 unicorn_1`qemu_anon_ram_free(uc=0x000000010480a600, ptr=0x0000000104668000, size=16384) at oslib-posix.c:148:5
    frame #3: 0x00000001000cf648 unicorn_1`reclaim_ramblock(uc=0x000000010480a600, block=0x0000000101f04730) at exec.c:1131:9
    frame #4: 0x00000001000cf5f8 unicorn_1`phys_page_compact(uc=0x000000010480a600, lp=0x0000000101f04730, nodes=0x000000010480a600) at exec.c:193:9
    frame #5: 0x00000001000d4ec0 unicorn_1`memory_region_destructor_ram(mr=0x0000000101f04970) at memory.c:886:5
    frame #6: 0x00000001000d3f94 unicorn_1`memory_map_mips(uc=0x0000000101f04970, begin=4370507264, size=4327491952, perms=1) at memory.c:48:9
    frame #7: 0x00000001001d706c unicorn_1`release_common(t=0x0000000130018000) at unicorn_common.h:62:5
    frame #8: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x0000000130018000) at unicorn_arm.c:42:5
    frame #9: 0x000000010000b50c unicorn_1`uc_close(uc=0x000000010480a600) at uc.c:443:9
    frame #10: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000101f04510) at lib.rs:147:22
    frame #11: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000101f04510) at mod.rs:490:1
    frame #12: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000101f04510) at mod.rs:490:1
    frame #13: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #14: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #15: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x000000017147a0a8) at mod.rs:490:1
    frame #16: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=189) at main.rs:41:5
    frame #17: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x000000017147a180, args=(189)) at function.rs:274:13
    frame #18: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=189) at iterator.rs:829:29
    frame #19: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 190, end = 190), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x000000017147a180) at iterator.rs:2433:21
    frame #20: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 187, end = 190), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #21: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147a210, iter=(start = 187, end = 190)) at for_each.rs:55:9
    frame #22: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x000000017147a250, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147a258) at mod.rs:110:9
    frame #23: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=3, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147a2e0, producer=rayon::range::IterProducer<i32> @ 0x000000017147a364, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147a2f0) at mod.rs:438:13
    frame #24: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147a3dd)) at mod.rs:427:21
    frame #25: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #26: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017147a708, stolen=false) at job.rs:96:9
    frame #27: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:158:36
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147a950) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147aa40, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147aa10, producer=rayon::range::IterProducer<i32> @ 0x000000017147aa94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147aa20) at mod.rs:416:47
    frame #31: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147ab0d)) at mod.rs:418:21
    frame #32: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #33: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #34: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017147ad98) at panicking.rs:483:40
    frame #35: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #36: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #37: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #38: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #39: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:141:24
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147b370) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147b460, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147b430, producer=rayon::range::IterProducer<i32> @ 0x000000017147b4b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147b440) at mod.rs:416:47
    frame #43: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147b52d)) at mod.rs:427:21
    frame #44: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #45: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017147b858, stolen=false) at job.rs:96:9
    frame #46: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:158:36
    frame #47: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147baa0) at registry.rs:925:13
    frame #48: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147bb90, oper_b=<unavailable>) at mod.rs:132:5
    frame #49: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147bb60, producer=rayon::range::IterProducer<i32> @ 0x000000017147bbe4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147bb70) at mod.rs:416:47
    frame #50: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147bc5d)) at mod.rs:427:21
    frame #51: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #52: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x000000017147bf88, stolen=false) at job.rs:96:9
    frame #53: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:158:36
    frame #54: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147c1d0) at registry.rs:925:13
    frame #55: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147c2c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #56: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147c290, producer=rayon::range::IterProducer<i32> @ 0x000000017147c314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147c2a0) at mod.rs:416:47
    frame #57: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147c38d)) at mod.rs:418:21
    frame #58: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #59: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #60: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017147c618) at panicking.rs:483:40
    frame #61: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #62: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #63: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #64: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #65: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:141:24
    frame #66: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147cbf0) at registry.rs:925:13
    frame #67: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147cce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #68: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147ccb0, producer=rayon::range::IterProducer<i32> @ 0x000000017147cd34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147ccc0) at mod.rs:416:47
    frame #69: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147cdad)) at mod.rs:418:21
    frame #70: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #71: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #72: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x000000017147d038) at panicking.rs:483:40
    frame #73: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #74: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #75: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #76: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #77: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017147e080, injected=false) at mod.rs:141:24
    frame #78: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x000000017147d610) at registry.rs:925:13
    frame #79: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x000000017147d700, oper_b=<unavailable>) at mod.rs:132:5
    frame #80: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x000000017147d6d0, producer=rayon::range::IterProducer<i32> @ 0x000000017147d754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x000000017147d6e0) at mod.rs:416:47
    frame #81: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017147d7cd)) at mod.rs:427:21
    frame #82: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #83: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #84: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #85: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x000000017147daa8) at panicking.rs:483:40
    frame #86: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #87: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #88: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #89: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #90: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #91: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #92: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x000000017147dde0) at job.rs:58:9
    frame #93: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x000000017147e080, job=rayon_core::job::JobRef @ 0x000000017147de10) at registry.rs:804:9
    frame #94: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x000000017147e080, latch=0x0000000102013000) at registry.rs:781:17
    frame #95: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x000000017147e080, latch=0x0000000102013000) at registry.rs:755:13
    frame #96: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x000000017147e418, registry=(refs:21) {...}, index=10) at registry.rs:889:5
    frame #97: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #98: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #99: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #100: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #101: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #102: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x000000017147ea28) at panicking.rs:483:40
    frame #103: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #104: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #105: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #106: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #107: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c720, (null)=()) at function.rs:250:5
    frame #108: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #109: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #110: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #111: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #13
    frame #0: 0x00000001986bbc6c libsystem_platform.dylib`_platform_memset + 108
    frame #1: 0x0000000100012fbc unicorn_1`qht_head_init(b=0x0000000130208000) at qht.c:159:5
    frame #2: 0x000000010001260c unicorn_1`qht_map_create(n_buckets=8192) at qht.c:250:9
    frame #3: 0x0000000100012510 unicorn_1`qht_init(ht=0x00000001301111c8, cmp=(unicorn_1`tb_cmp + 803228 at translate-all.c:985), n_elems=32768, mode=1) at qht.c:264:11
    frame #4: 0x0000000100120888 unicorn_1`tb_htable_init(uc=0x000000010480e000) at translate-all.c:1002:5
    frame #5: 0x0000000100120790 unicorn_1`tcg_exec_init_arm(uc=0x000000010480e000, tb_size=0) at translate-all.c:1111:5
    frame #6: 0x000000010000daec unicorn_1`machine_initialize(uc=0x000000010480e000) at vl.c:53:5
    frame #7: 0x000000010000b940 unicorn_1`uc_init(uc=0x000000010480e000) at uc.c:229:9
    frame #8: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x000000010480e000, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #9: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x00000001716857d8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #10: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=7534) at main.rs:27:9
    frame #11: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x00000001716858b0, args=(7534)) at function.rs:274:13
    frame #12: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=7534) at iterator.rs:829:29
    frame #13: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 7535, end = 7539), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x00000001716858b0) at iterator.rs:2433:21
    frame #14: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 7500, end = 7539), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #15: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171685940, iter=(start = 7500, end = 7539)) at for_each.rs:55:9
    frame #16: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000171685980, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171685988) at mod.rs:110:9
    frame #17: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171685a10, producer=rayon::range::IterProducer<i32> @ 0x0000000171685a94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171685a20) at mod.rs:438:13
    frame #18: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171685b0d)) at mod.rs:418:21
    frame #19: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #20: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #21: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171685d98) at panicking.rs:483:40
    frame #22: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #23: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #24: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #25: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #26: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #27: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171686370) at registry.rs:925:13
    frame #28: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171686460, oper_b=<unavailable>) at mod.rs:132:5
    frame #29: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171686430, producer=rayon::range::IterProducer<i32> @ 0x00000001716864b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171686440) at mod.rs:416:47
    frame #30: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017168652d)) at mod.rs:418:21
    frame #31: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #32: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #33: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001716867b8) at panicking.rs:483:40
    frame #34: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #35: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #36: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #37: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #38: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #39: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171686d90) at registry.rs:925:13
    frame #40: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171686e80, oper_b=<unavailable>) at mod.rs:132:5
    frame #41: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171686e50, producer=rayon::range::IterProducer<i32> @ 0x0000000171686ed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171686e60) at mod.rs:416:47
    frame #42: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171686f4d)) at mod.rs:418:21
    frame #43: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #44: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #45: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001716871d8) at panicking.rs:483:40
    frame #46: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #47: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #48: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #49: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #50: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #51: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001716877b0) at registry.rs:925:13
    frame #52: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001716878a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #53: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171687870, producer=rayon::range::IterProducer<i32> @ 0x00000001716878f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171687880) at mod.rs:416:47
    frame #54: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017168796d)) at mod.rs:418:21
    frame #55: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #56: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #57: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171687bf8) at panicking.rs:483:40
    frame #58: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #59: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #60: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #61: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #62: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #63: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001716881d0) at registry.rs:925:13
    frame #64: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001716882c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #65: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171688290, producer=rayon::range::IterProducer<i32> @ 0x0000000171688314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001716882a0) at mod.rs:416:47
    frame #66: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x000000017168838d)) at mod.rs:418:21
    frame #67: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #68: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #69: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171688618) at panicking.rs:483:40
    frame #70: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #71: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #72: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #73: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #74: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #75: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171688bf0) at registry.rs:925:13
    frame #76: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171688ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #77: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171688cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171688d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171688cc0) at mod.rs:416:47
    frame #78: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171688dad)) at mod.rs:418:21
    frame #79: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #80: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #81: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171689038) at panicking.rs:483:40
    frame #82: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #83: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #84: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #85: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #86: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x000000017168a080, injected=false) at mod.rs:141:24
    frame #87: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171689610) at registry.rs:925:13
    frame #88: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171689700, oper_b=<unavailable>) at mod.rs:132:5
    frame #89: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=2500, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001716896d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171689754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001716896e0) at mod.rs:416:47
    frame #90: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001716897cd)) at mod.rs:427:21
    frame #91: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #92: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #93: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #94: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171689aa8) at panicking.rs:483:40
    frame #95: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #96: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #97: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #98: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #99: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #100: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #101: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171689de0) at job.rs:58:9
    frame #102: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x000000017168a080, job=rayon_core::job::JobRef @ 0x0000000171689e10) at registry.rs:804:9
    frame #103: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x000000017168a080, latch=0x0000000102013060) at registry.rs:781:17
    frame #104: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x000000017168a080, latch=0x0000000102013060) at registry.rs:755:13
    frame #105: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x000000017168a418, registry=(refs:21) {...}, index=11) at registry.rs:889:5
    frame #106: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #107: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #108: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #109: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #110: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #111: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x000000017168aa28) at panicking.rs:483:40
    frame #112: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #113: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #114: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #115: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #116: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c7a0, (null)=()) at function.rs:250:5
    frame #117: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #118: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #120: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #14
    frame #0: 0x00000001000d2764 unicorn_1`phys_map_node_alloc(map=0x0000000101a0f900, leaf=false) at exec.c:138:17
    frame #1: 0x00000001000d2790 unicorn_1`phys_map_node_alloc(map=0x0000000101a0f900, leaf=false) at exec.c:139:9
    frame #2: 0x00000001000d24f0 unicorn_1`phys_page_set_level(map=0x0000000101a0f900, lp=0x00000001182e9800, index=0x0000000171891900, nb=0x00000001718918f8, leaf=1, level=1) at exec.c:152:19
    frame #3: 0x00000001000d2638 unicorn_1`phys_page_set_level(map=0x0000000101a0f900, lp=0x00000001182e9800, index=0x0000000171891900, nb=0x00000001718918f8, leaf=1, level=2) at exec.c:164:13
  thread #15
    frame #0: 0x000000010000f14c unicorn_1`g_hash_table_lookup_node_for_insertion(hash_table=0x0000000101a0e0d0, key=0x00000001001180e4, hash_return=0x0000000171a9d530) at glib_compat.c:614:9
    frame #1: 0x000000010000e610 unicorn_1`g_hash_table_insert_internal(hash_table=0x0000000101a0e0d0, key=0x00000001001180e4, value=0x0000000100e6f008, keep_new_key=0) at glib_compat.c:796:18
    frame #2: 0x000000010000e788 unicorn_1`g_hash_table_insert(hash_table=0x0000000101a0e0d0, key=0x00000001001180e4, value=0x0000000100e6f008) at glib_compat.c:863:5
    frame #3: 0x00000001000eac5c unicorn_1`tb_target_set_jmp_target_x86_64(tc_ptr=4700733440, jmp_addr=760209211856, addr=12884902595) at tcg-target.inc.c:1362:56
    frame #4: 0x000000010012076c unicorn_1`tcg_exec_init_arm(uc=0x00000001020d0c00, tb_size=0) at translate-all.c:1108:5
    frame #5: 0x000000010000daec unicorn_1`machine_initialize(uc=0x00000001020d0c00) at vl.c:53:5
    frame #6: 0x000000010000b940 unicorn_1`uc_init(uc=0x00000001020d0c00) at uc.c:229:9
    frame #7: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x00000001020d0c00, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #8: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x0000000171a9d7d8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #9: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=2529) at main.rs:27:9
    frame #10: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000171a9d8b0, args=(2529)) at function.rs:274:13
    frame #11: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=2529) at iterator.rs:829:29
    frame #12: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 2530, end = 2539), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000171a9d8b0) at iterator.rs:2433:21
    frame #13: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 2500, end = 2539), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #14: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9d940, iter=(start = 2500, end = 2539)) at for_each.rs:55:9
    frame #15: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000171a9d980, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9d988) at mod.rs:110:9
    frame #16: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171a9da10, producer=rayon::range::IterProducer<i32> @ 0x0000000171a9da94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9da20) at mod.rs:438:13
    frame #17: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171a9db0d)) at mod.rs:418:21
    frame #18: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #19: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #20: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171a9dd98) at panicking.rs:483:40
    frame #21: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #22: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #23: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #24: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #25: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #26: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171a9e370) at registry.rs:925:13
    frame #27: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171a9e460, oper_b=<unavailable>) at mod.rs:132:5
    frame #28: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171a9e430, producer=rayon::range::IterProducer<i32> @ 0x0000000171a9e4b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9e440) at mod.rs:416:47
    frame #29: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171a9e52d)) at mod.rs:418:21
    frame #30: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #31: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #32: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171a9e7b8) at panicking.rs:483:40
    frame #33: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #34: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #35: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #36: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #37: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #38: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171a9ed90) at registry.rs:925:13
    frame #39: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171a9ee80, oper_b=<unavailable>) at mod.rs:132:5
    frame #40: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171a9ee50, producer=rayon::range::IterProducer<i32> @ 0x0000000171a9eed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9ee60) at mod.rs:416:47
    frame #41: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171a9ef4d)) at mod.rs:418:21
    frame #42: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #43: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #44: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171a9f1d8) at panicking.rs:483:40
    frame #45: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #46: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #47: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #48: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #49: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #50: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171a9f7b0) at registry.rs:925:13
    frame #51: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171a9f8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #52: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171a9f870, producer=rayon::range::IterProducer<i32> @ 0x0000000171a9f8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171a9f880) at mod.rs:416:47
    frame #53: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171a9f96d)) at mod.rs:418:21
    frame #54: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #55: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #56: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171a9fbf8) at panicking.rs:483:40
    frame #57: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #58: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #59: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #60: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #61: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #62: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171aa01d0) at registry.rs:925:13
    frame #63: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171aa02c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #64: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171aa0290, producer=rayon::range::IterProducer<i32> @ 0x0000000171aa0314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171aa02a0) at mod.rs:416:47
    frame #65: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171aa038d)) at mod.rs:418:21
    frame #66: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #67: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #68: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171aa0618) at panicking.rs:483:40
    frame #69: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #70: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #71: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #72: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #73: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #74: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171aa0bf0) at registry.rs:925:13
    frame #75: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171aa0ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #76: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171aa0cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171aa0d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171aa0cc0) at mod.rs:416:47
    frame #77: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171aa0dad)) at mod.rs:418:21
    frame #78: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #79: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #80: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171aa1038) at panicking.rs:483:40
    frame #81: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #82: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #83: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #84: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #85: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171aa2080, injected=false) at mod.rs:141:24
    frame #86: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171aa1610) at registry.rs:925:13
    frame #87: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171aa1700, oper_b=<unavailable>) at mod.rs:132:5
    frame #88: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=2500, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171aa16d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171aa1754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171aa16e0) at mod.rs:416:47
    frame #89: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171aa17cd)) at mod.rs:427:21
    frame #90: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #91: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #92: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #93: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171aa1aa8) at panicking.rs:483:40
    frame #94: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #95: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #96: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #97: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #98: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #99: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #100: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171aa1de0) at job.rs:58:9
    frame #101: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000171aa2080, job=rayon_core::job::JobRef @ 0x0000000171aa1e10) at registry.rs:804:9
    frame #102: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000171aa2080, latch=0x0000000102013120) at registry.rs:781:17
    frame #103: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000171aa2080, latch=0x0000000102013120) at registry.rs:755:13
    frame #104: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000171aa2418, registry=(refs:21) {...}, index=13) at registry.rs:889:5
    frame #105: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #106: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #107: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #108: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #109: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #110: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000171aa2a28) at panicking.rs:483:40
    frame #111: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #112: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #113: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #114: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #115: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c8a0, (null)=()) at function.rs:250:5
    frame #116: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #117: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #118: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #119: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #16
    frame #0: 0x0000000198651a68 libsystem_kernel.dylib`__munmap + 8
    frame #1: 0x0000000100120714 unicorn_1`free_code_gen_buffer_arm(uc=0x0000000103896600) at translate-all.c:909:13
    frame #2: 0x00000001001d70b4 unicorn_1`release_common(t=0x00000001200b8000) at unicorn_common.h:68:5
    frame #3: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x00000001200b8000) at unicorn_arm.c:42:5
    frame #4: 0x000000010000b50c unicorn_1`uc_close(uc=0x0000000103896600) at uc.c:443:9
    frame #5: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000101e05d40) at lib.rs:147:22
    frame #6: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000101e05d40) at mod.rs:490:1
    frame #7: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000101e05d40) at mod.rs:490:1
    frame #8: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #9: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #10: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x0000000171ca9ac8) at mod.rs:490:1
    frame #11: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=4401) at main.rs:41:5
    frame #12: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000171ca9ba0, args=(4401)) at function.rs:274:13
    frame #13: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=4401) at iterator.rs:829:29
    frame #14: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 4402, end = 4404), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000171ca9ba0) at iterator.rs:2433:21
    frame #15: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 4394, end = 4404), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #16: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171ca9c30, iter=(start = 4394, end = 4404)) at for_each.rs:55:9
    frame #17: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000171ca9c70, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171ca9c78) at mod.rs:110:9
    frame #18: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171ca9d00, producer=rayon::range::IterProducer<i32> @ 0x0000000171ca9d84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171ca9d10) at mod.rs:438:13
    frame #19: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171ca9dfd)) at mod.rs:418:21
    frame #20: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #21: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #22: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171caa088) at panicking.rs:483:40
    frame #23: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #24: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #25: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #26: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #27: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:141:24
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171caa660) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171caa750, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171caa720, producer=rayon::range::IterProducer<i32> @ 0x0000000171caa7a4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171caa730) at mod.rs:416:47
    frame #31: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171caa81d)) at mod.rs:427:21
    frame #32: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #33: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000171caab48, stolen=false) at job.rs:96:9
    frame #34: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:158:36
    frame #35: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171caad90) at registry.rs:925:13
    frame #36: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171caae80, oper_b=<unavailable>) at mod.rs:132:5
    frame #37: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171caae50, producer=rayon::range::IterProducer<i32> @ 0x0000000171caaed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171caae60) at mod.rs:416:47
    frame #38: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171caaf4d)) at mod.rs:418:21
    frame #39: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #40: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #41: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171cab1d8) at panicking.rs:483:40
    frame #42: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #43: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #44: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #45: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #46: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:141:24
    frame #47: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171cab7b0) at registry.rs:925:13
    frame #48: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171cab8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #49: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171cab870, producer=rayon::range::IterProducer<i32> @ 0x0000000171cab8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171cab880) at mod.rs:416:47
    frame #50: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171cab96d)) at mod.rs:418:21
    frame #51: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #52: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #53: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171cabbf8) at panicking.rs:483:40
    frame #54: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #55: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #56: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #57: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #58: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:141:24
    frame #59: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171cac1d0) at registry.rs:925:13
    frame #60: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171cac2c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #61: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171cac290, producer=rayon::range::IterProducer<i32> @ 0x0000000171cac314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171cac2a0) at mod.rs:416:47
    frame #62: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171cac38d)) at mod.rs:418:21
    frame #63: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #64: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #65: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171cac618) at panicking.rs:483:40
    frame #66: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #67: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #68: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #69: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #70: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:141:24
    frame #71: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171cacbf0) at registry.rs:925:13
    frame #72: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171cacce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #73: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171caccb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171cacd34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171caccc0) at mod.rs:416:47
    frame #74: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171cacdad)) at mod.rs:418:21
    frame #75: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #76: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #77: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171cad038) at panicking.rs:483:40
    frame #78: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #79: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #80: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #81: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #82: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171cae080, injected=false) at mod.rs:141:24
    frame #83: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171cad610) at registry.rs:925:13
    frame #84: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171cad700, oper_b=<unavailable>) at mod.rs:132:5
    frame #85: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171cad6d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171cad754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171cad6e0) at mod.rs:416:47
    frame #86: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171cad7cd)) at mod.rs:427:21
    frame #87: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #88: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #89: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #90: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171cadaa8) at panicking.rs:483:40
    frame #91: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #92: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #93: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #94: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #95: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #96: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #97: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171cadde0) at job.rs:58:9
    frame #98: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000171cae080, job=rayon_core::job::JobRef @ 0x0000000171cade10) at registry.rs:804:9
    frame #99: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000171cae080, latch=0x0000000102013180) at registry.rs:781:17
    frame #100: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000171cae080, latch=0x0000000102013180) at registry.rs:755:13
    frame #101: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000171cae418, registry=(refs:21) {...}, index=14) at registry.rs:889:5
    frame #102: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #103: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #104: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #105: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #106: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #107: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000171caea28) at panicking.rs:483:40
    frame #108: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #109: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #110: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #111: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #112: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c920, (null)=()) at function.rs:250:5
    frame #113: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #114: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #115: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #116: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #17
    frame #0: 0x0000000198651a68 libsystem_kernel.dylib`__munmap + 8
    frame #1: 0x0000000100013e30 unicorn_1`qemu_ram_munmap(uc=0x0000000103834200, ptr=0x0000000104688000, size=131072) at oslib-posix.c:271:9
    frame #2: 0x0000000100013de0 unicorn_1`qemu_anon_ram_free(uc=0x0000000103834200, ptr=0x0000000104688000, size=131072) at oslib-posix.c:148:5
    frame #3: 0x00000001000cf648 unicorn_1`reclaim_ramblock(uc=0x0000000103834200, block=0x0000000101e06bf0) at exec.c:1131:9
    frame #4: 0x00000001000cf5f8 unicorn_1`phys_page_compact(uc=0x0000000103834200, lp=0x0000000101e06bf0, nodes=0x0000000103834200) at exec.c:193:9
    frame #5: 0x00000001000d4ec0 unicorn_1`memory_region_destructor_ram(mr=0x0000000101e062f0) at memory.c:886:5
    frame #6: 0x00000001000d3f94 unicorn_1`memory_map_mips(uc=0x0000000101e062f0, begin=4353901056, size=4326449904, perms=0) at memory.c:48:9
    frame #7: 0x00000001001d706c unicorn_1`release_common(t=0x00000001200a8000) at unicorn_common.h:62:5
    frame #8: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x00000001200a8000) at unicorn_arm.c:42:5
    frame #9: 0x000000010000b50c unicorn_1`uc_close(uc=0x0000000103834200) at uc.c:443:9
    frame #10: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000101e05e50) at lib.rs:147:22
    frame #11: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000101e05e50) at mod.rs:490:1
    frame #12: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000101e05e50) at mod.rs:490:1
    frame #13: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #14: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #15: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x0000000171eb5ac8) at mod.rs:490:1
    frame #16: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=1276) at main.rs:41:5
    frame #17: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x0000000171eb5ba0, args=(1276)) at function.rs:274:13
    frame #18: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=1276) at iterator.rs:829:29
    frame #19: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 1277, end = 1289), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x0000000171eb5ba0) at iterator.rs:2433:21
    frame #20: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 1269, end = 1289), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #21: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb5c30, iter=(start = 1269, end = 1289)) at for_each.rs:55:9
    frame #22: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x0000000171eb5c70, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb5c78) at mod.rs:110:9
    frame #23: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb5d00, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb5d84, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb5d10) at mod.rs:438:13
    frame #24: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb5dfd)) at mod.rs:427:21
    frame #25: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #26: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x0000000171eb6128, stolen=false) at job.rs:96:9
    frame #27: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:158:36
    frame #28: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb6370) at registry.rs:925:13
    frame #29: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb6460, oper_b=<unavailable>) at mod.rs:132:5
    frame #30: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb6430, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb64b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb6440) at mod.rs:416:47
    frame #31: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb652d)) at mod.rs:418:21
    frame #32: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #33: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #34: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171eb67b8) at panicking.rs:483:40
    frame #35: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #36: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #37: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #38: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #39: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:141:24
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb6d90) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb6e80, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb6e50, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb6ed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb6e60) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb6f4d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171eb71d8) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb77b0) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb78a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb7870, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb78f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb7880) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb796d)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171eb7bf8) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb81d0) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb82c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb8290, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb8314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb82a0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb838d)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171eb8618) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb8bf0) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb8ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb8cb0, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb8d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb8cc0) at mod.rs:416:47
    frame #79: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb8dad)) at mod.rs:418:21
    frame #80: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #81: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #82: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x0000000171eb9038) at panicking.rs:483:40
    frame #83: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #84: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #85: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #86: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #87: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x0000000171eba080, injected=false) at mod.rs:141:24
    frame #88: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x0000000171eb9610) at registry.rs:925:13
    frame #89: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x0000000171eb9700, oper_b=<unavailable>) at mod.rs:132:5
    frame #90: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x0000000171eb96d0, producer=rayon::range::IterProducer<i32> @ 0x0000000171eb9754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x0000000171eb96e0) at mod.rs:416:47
    frame #91: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x0000000171eb97cd)) at mod.rs:427:21
    frame #92: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #93: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #94: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #95: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x0000000171eb9aa8) at panicking.rs:483:40
    frame #96: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #97: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #98: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #99: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #100: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #101: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #102: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x0000000171eb9de0) at job.rs:58:9
    frame #103: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x0000000171eba080, job=rayon_core::job::JobRef @ 0x0000000171eb9e10) at registry.rs:804:9
    frame #104: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x0000000171eba080, latch=0x00000001020131e0) at registry.rs:781:17
    frame #105: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x0000000171eba080, latch=0x00000001020131e0) at registry.rs:755:13
    frame #106: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x0000000171eba418, registry=(refs:21) {...}, index=15) at registry.rs:889:5
    frame #107: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #108: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #109: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #110: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #111: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #112: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x0000000171ebaa28) at panicking.rs:483:40
    frame #113: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #114: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #115: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #116: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #117: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0c9a0, (null)=()) at function.rs:250:5
    frame #118: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #120: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #121: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #18
    frame #0: 0x00000001000f4d38 unicorn_1`get_constraint_priority(def=0x000000010703e380, k=1) at tcg.c:1979:9
    frame #1: 0x00000001000f4bf0 unicorn_1`sort_constraints(def=0x000000010703e380, start=1, n=2) at tcg.c:1998:18
    frame #2: 0x00000001000eb434 unicorn_1`process_op_defs(s=0x00000001480b8000) at tcg.c:2089:9
    frame #3: 0x00000001000eac80 unicorn_1`tb_target_set_jmp_target_x86_64(tc_ptr=5503680512, jmp_addr=760209211856, addr=12884902736) at tcg-target.inc.c:1364:44
    frame #4: 0x000000010012076c unicorn_1`tcg_exec_init_arm(uc=0x0000000106808600, tb_size=0) at translate-all.c:1108:5
    frame #5: 0x000000010000daec unicorn_1`machine_initialize(uc=0x0000000106808600) at vl.c:53:5
    frame #6: 0x000000010000b940 unicorn_1`uc_init(uc=0x0000000106808600) at uc.c:229:9
    frame #7: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x0000000106808600, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #8: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x00000001720c1db8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #9: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=9718) at main.rs:27:9
    frame #10: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x00000001720c1e90, args=(9718)) at function.rs:274:13
    frame #11: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=9718) at iterator.rs:829:29
    frame #12: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 9719, end = 9721), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x00000001720c1e90) at iterator.rs:2433:21
    frame #13: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 9716, end = 9721), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #14: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c1f20, iter=(start = 9716, end = 9721)) at for_each.rs:55:9
    frame #15: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x00000001720c1f60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c1f68) at mod.rs:110:9
    frame #16: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c1ff0, producer=rayon::range::IterProducer<i32> @ 0x00000001720c2074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c2000) at mod.rs:438:13
    frame #17: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c20ed)) at mod.rs:418:21
    frame #18: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #19: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #20: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001720c2378) at panicking.rs:483:40
    frame #21: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #22: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #23: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #24: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #25: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:141:24
    frame #26: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c2950) at registry.rs:925:13
    frame #27: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c2a40, oper_b=<unavailable>) at mod.rs:132:5
    frame #28: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c2a10, producer=rayon::range::IterProducer<i32> @ 0x00000001720c2a94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c2a20) at mod.rs:416:47
    frame #29: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c2b0d)) at mod.rs:427:21
    frame #30: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #31: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x00000001720c2e38, stolen=false) at job.rs:96:9
    frame #32: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:158:36
    frame #33: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c3080) at registry.rs:925:13
    frame #34: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c3170, oper_b=<unavailable>) at mod.rs:132:5
    frame #35: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c3140, producer=rayon::range::IterProducer<i32> @ 0x00000001720c31c4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c3150) at mod.rs:416:47
    frame #36: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c323d)) at mod.rs:427:21
    frame #37: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #38: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x00000001720c3568, stolen=false) at job.rs:96:9
    frame #39: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:158:36
    frame #40: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c37b0) at registry.rs:925:13
    frame #41: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c38a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #42: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c3870, producer=rayon::range::IterProducer<i32> @ 0x00000001720c38f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c3880) at mod.rs:416:47
    frame #43: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c396d)) at mod.rs:418:21
    frame #44: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #45: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #46: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001720c3bf8) at panicking.rs:483:40
    frame #47: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #48: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #49: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #50: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #51: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:141:24
    frame #52: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c41d0) at registry.rs:925:13
    frame #53: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c42c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #54: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c4290, producer=rayon::range::IterProducer<i32> @ 0x00000001720c4314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c42a0) at mod.rs:416:47
    frame #55: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c438d)) at mod.rs:418:21
    frame #56: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #57: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #58: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001720c4618) at panicking.rs:483:40
    frame #59: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #60: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #61: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #62: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #63: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:141:24
    frame #64: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c4bf0) at registry.rs:925:13
    frame #65: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c4ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #66: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c4cb0, producer=rayon::range::IterProducer<i32> @ 0x00000001720c4d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c4cc0) at mod.rs:416:47
    frame #67: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c4dad)) at mod.rs:418:21
    frame #68: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #69: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #70: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001720c5038) at panicking.rs:483:40
    frame #71: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #72: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #73: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #74: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #75: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001720c6080, injected=false) at mod.rs:141:24
    frame #76: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001720c5610) at registry.rs:925:13
    frame #77: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001720c5700, oper_b=<unavailable>) at mod.rs:132:5
    frame #78: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=313, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001720c56d0, producer=rayon::range::IterProducer<i32> @ 0x00000001720c5754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001720c56e0) at mod.rs:416:47
    frame #79: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001720c57cd)) at mod.rs:427:21
    frame #80: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #81: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #82: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #83: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x00000001720c5aa8) at panicking.rs:483:40
    frame #84: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #85: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #86: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #87: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #88: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #89: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #90: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x00000001720c5de0) at job.rs:58:9
    frame #91: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x00000001720c6080, job=rayon_core::job::JobRef @ 0x00000001720c5e10) at registry.rs:804:9
    frame #92: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x00000001720c6080, latch=0x0000000102013240) at registry.rs:781:17
    frame #93: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x00000001720c6080, latch=0x0000000102013240) at registry.rs:755:13
    frame #94: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x00000001720c6418, registry=(refs:21) {...}, index=16) at registry.rs:889:5
    frame #95: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #96: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #97: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #98: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #99: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #100: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x00000001720c6a28) at panicking.rs:483:40
    frame #101: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #102: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #103: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #104: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #105: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0ca20, (null)=()) at function.rs:250:5
    frame #106: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #107: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #108: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #109: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #19
    frame #0: 0x00000001000d2764 unicorn_1`phys_map_node_alloc(map=0x0000000101b05e30, leaf=false) at exec.c:138:17
    frame #1: 0x00000001000d2790 unicorn_1`phys_map_node_alloc(map=0x0000000101b05e30, leaf=false) at exec.c:139:9
    frame #2: 0x00000001000d24f0 unicorn_1`phys_page_set_level(map=0x0000000101b05e30, lp=0x0000000101b05e28, index=0x00000001722cd6f0, nb=0x00000001722cd6e8, leaf=1, level=5) at exec.c:152:19
    frame #3: 0x00000001000d1c28 unicorn_1`phys_page_set(d=0x0000000101b05e20, index=0, nb=64, leaf=1) at exec.c:180:5
    frame #4: 0x00000001000cf11c unicorn_1`register_multipage(uc=0x000000010483fc00, fv=0x0000000101b077b0, section=0x00000001722cd780) at exec.c:910:5
    frame #5: 0x00000001000cea24 unicorn_1`phys_page_compact(uc=0x0000000000000000, lp=0x0000000000000000, nodes=0x0000000000000400) at exec.c:235:1
    frame #6: 0x00000001000d5818 unicorn_1`generate_memory_topology(uc=0x000000010483fc00, mr=0x0000000101f05a90) at memory.c:706:9
    frame #7: 0x00000001000d4280 unicorn_1`flatviews_reset(uc=0x000000010483fc00) at memory.c:815:9
    frame #8: 0x00000001000d40d4 unicorn_1`memory_map_mips(uc=0x0000000101a07f70, begin=4327495792, size=4322262896, perms=1) at memory.c:45:28
    frame #9: 0x00000001000d3f1c unicorn_1`memory_region_init_ram_mips(uc=0x0000000101f05870, mr=0x00000001722cda10, size=4327495792, perms=1) at memory.c:1338:28
    frame #10: 0x00000001000d3f84 unicorn_1`memory_map_mips(uc=0x0000000101b08920, begin=4370725888, size=4323313952, perms=1) at memory.c:46:34
    frame #11: 0x00000001001d706c unicorn_1`release_common(t=0x00000001103b8000) at unicorn_common.h:62:5
    frame #12: 0x00000001001d5428 unicorn_1`arm_release(ctx=0x00000001103b8000) at unicorn_arm.c:42:5
    frame #13: 0x000000010000b50c unicorn_1`uc_close(uc=0x000000010483fc00) at uc.c:443:9
    frame #14: 0x000000010000a18c unicorn_1`<unicorn_engine::UnicornInner<D> as core::ops::drop::Drop>::drop(self=0x0000000101f04ad0) at lib.rs:147:22
    frame #15: 0x0000000100009f3c unicorn_1`core::ptr::drop_in_place<unicorn_engine::UnicornInner<()>>((null)=0x0000000101f04ad0) at mod.rs:490:1
    frame #16: 0x000000010000a0ec unicorn_1`core::ptr::drop_in_place<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>((null)=0x0000000101f04ad0) at mod.rs:490:1
    frame #17: 0x0000000100004338 unicorn_1`<alloc::rc::Rc<T> as core::ops::drop::Drop>::drop(self=(refs:0,weak:1) <disposed>) at rc.rs:1593:17
    frame #18: 0x000000010000412c unicorn_1`core::ptr::drop_in_place<alloc::rc::Rc<core::cell::UnsafeCell<unicorn_engine::UnicornInner<()>>>>((null)=(refs:0,weak:1) <disposed>) at mod.rs:490:1
    frame #19: 0x0000000100004184 unicorn_1`core::ptr::drop_in_place<unicorn_engine::Unicorn<()>>((null)=0x00000001722cddb8) at mod.rs:490:1
    frame #20: 0x0000000100006a7c unicorn_1`unicorn_1::main::{{closure}}(num=1593) at main.rs:41:5
    frame #21: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x00000001722cde90, args=(1593)) at function.rs:274:13
    frame #22: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=1593) at iterator.rs:829:29
    frame #23: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 1594, end = 1596), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x00000001722cde90) at iterator.rs:2433:21
    frame #24: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 1591, end = 1596), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #25: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722cdf20, iter=(start = 1591, end = 1596)) at for_each.rs:55:9
    frame #26: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x00000001722cdf60, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722cdf68) at mod.rs:110:9
    frame #27: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722cdff0, producer=rayon::range::IterProducer<i32> @ 0x00000001722ce074, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722ce000) at mod.rs:438:13
    frame #28: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722ce0ed)) at mod.rs:418:21
    frame #29: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #30: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #31: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001722ce378) at panicking.rs:483:40
    frame #32: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #33: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #34: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #35: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #36: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:141:24
    frame #37: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722ce950) at registry.rs:925:13
    frame #38: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722cea40, oper_b=<unavailable>) at mod.rs:132:5
    frame #39: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=10, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722cea10, producer=rayon::range::IterProducer<i32> @ 0x00000001722cea94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722cea20) at mod.rs:416:47
    frame #40: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722ceb0d)) at mod.rs:427:21
    frame #41: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #42: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x00000001722cee38, stolen=false) at job.rs:96:9
    frame #43: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:158:36
    frame #44: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722cf080) at registry.rs:925:13
    frame #45: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722cf170, oper_b=<unavailable>) at mod.rs:132:5
    frame #46: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=20, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722cf140, producer=rayon::range::IterProducer<i32> @ 0x00000001722cf1c4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722cf150) at mod.rs:416:47
    frame #47: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722cf23d)) at mod.rs:427:21
    frame #48: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=false) at mod.rs:129:25
    frame #49: 0x0000000100007dbc unicorn_1`rayon_core::job::StackJob<L,F,R>::run_inline(self=rayon_core::job::StackJob<rayon_core::latch::SpinLatch, rayon_core::join::join_context::call_b::{closure_env#0}<(), rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>>, ()> @ 0x00000001722cf568, stolen=false) at job.rs:96:9
    frame #50: 0x0000000100004980 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:158:36
    frame #51: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722cf7b0) at registry.rs:925:13
    frame #52: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722cf8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #53: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=39, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722cf870, producer=rayon::range::IterProducer<i32> @ 0x00000001722cf8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722cf880) at mod.rs:416:47
    frame #54: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722cf96d)) at mod.rs:418:21
    frame #55: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #56: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #57: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001722cfbf8) at panicking.rs:483:40
    frame #58: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #59: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #60: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #61: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #62: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:141:24
    frame #63: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722d01d0) at registry.rs:925:13
    frame #64: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722d02c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #65: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722d0290, producer=rayon::range::IterProducer<i32> @ 0x00000001722d0314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722d02a0) at mod.rs:416:47
    frame #66: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722d038d)) at mod.rs:418:21
    frame #67: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #68: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #69: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001722d0618) at panicking.rs:483:40
    frame #70: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #71: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #72: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #73: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #74: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:141:24
    frame #75: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722d0bf0) at registry.rs:925:13
    frame #76: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722d0ce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #77: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722d0cb0, producer=rayon::range::IterProducer<i32> @ 0x00000001722d0d34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722d0cc0) at mod.rs:416:47
    frame #78: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722d0dad)) at mod.rs:418:21
    frame #79: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #80: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #81: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001722d1038) at panicking.rs:483:40
    frame #82: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #83: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #84: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #85: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #86: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001722d2080, injected=false) at mod.rs:141:24
    frame #87: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001722d1610) at registry.rs:925:13
    frame #88: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001722d1700, oper_b=<unavailable>) at mod.rs:132:5
    frame #89: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=313, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001722d16d0, producer=rayon::range::IterProducer<i32> @ 0x00000001722d1754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001722d16e0) at mod.rs:416:47
    frame #90: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001722d17cd)) at mod.rs:427:21
    frame #91: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #92: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #93: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #94: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x00000001722d1aa8) at panicking.rs:483:40
    frame #95: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #96: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #97: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #98: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #99: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #100: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #101: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x00000001722d1de0) at job.rs:58:9
    frame #102: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x00000001722d2080, job=rayon_core::job::JobRef @ 0x00000001722d1e10) at registry.rs:804:9
    frame #103: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x00000001722d2080, latch=0x00000001020132a0) at registry.rs:781:17
    frame #104: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x00000001722d2080, latch=0x00000001020132a0) at registry.rs:755:13
    frame #105: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x00000001722d2418, registry=(refs:21) {...}, index=17) at registry.rs:889:5
    frame #106: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #107: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #108: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #109: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #110: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #111: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x00000001722d2a28) at panicking.rs:483:40
    frame #112: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #113: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #114: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #115: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #116: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0caa0, (null)=()) at function.rs:250:5
    frame #117: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #118: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #120: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #20
    frame #0: 0x0000000100ddd698 unicorn_1`__memset_chk + 4
    frame #1: 0x0000000100012fbc unicorn_1`qht_head_init(b=0x0000000108037780) at qht.c:159:5
    frame #2: 0x000000010001260c unicorn_1`qht_map_create(n_buckets=8192) at qht.c:250:9
    frame #3: 0x0000000100012510 unicorn_1`qht_init(ht=0x00000001081c11c8, cmp=(unicorn_1`tb_cmp + 803228 at translate-all.c:985), n_elems=32768, mode=1) at qht.c:264:11
    frame #4: 0x0000000100120888 unicorn_1`tb_htable_init(uc=0x000000010309e400) at translate-all.c:1002:5
    frame #5: 0x0000000100120790 unicorn_1`tcg_exec_init_arm(uc=0x000000010309e400, tb_size=0) at translate-all.c:1111:5
    frame #6: 0x000000010000daec unicorn_1`machine_initialize(uc=0x000000010309e400) at vl.c:53:5
    frame #7: 0x000000010000b940 unicorn_1`uc_init(uc=0x000000010309e400) at uc.c:229:9
    frame #8: 0x000000010000cc28 unicorn_1`uc_mem_map(uc=0x000000010309e400, address=2147483648, size=131072, perms=7) at uc.c:1052:5
    frame #9: 0x0000000100007748 unicorn_1`unicorn_engine::Unicorn<D>::mem_map(self=0x00000001724d97d8, address=2147483648, size=131072, perms=(bits = 7)) at lib.rs:346:28
    frame #10: 0x00000001000068e0 unicorn_1`unicorn_1::main::{{closure}}(num=5025) at main.rs:27:9
    frame #11: 0x00000001000067e0 unicorn_1`core::ops::function::impls::<impl core::ops::function::FnMut<A> for &F>::call_mut(self=0x00000001724d98b0, args=(5025)) at function.rs:274:13
    frame #12: 0x0000000100008b6c unicorn_1`core::iter::traits::iterator::Iterator::for_each::call::{{closure}}((null)=(), item=5025) at iterator.rs:829:29
    frame #13: 0x0000000100008e08 unicorn_1`core::iter::traits::iterator::Iterator::fold(self=(start = 5026, end = 5078), init=(), f=core::iter::traits::iterator::Iterator::for_each::call::{closure_env#0}<i32, &unicorn_1::main::{closure_env#0}> @ 0x00000001724d98b0) at iterator.rs:2433:21
    frame #14: 0x0000000100008e6c unicorn_1`core::iter::traits::iterator::Iterator::for_each(self=(start = 5000, end = 5078), f=0x000000016fdfeff0) at iterator.rs:832:9
    frame #15: 0x0000000100005928 unicorn_1`<rayon::iter::for_each::ForEachConsumer<F> as rayon::iter::plumbing::Folder<T>>::consume_iter(self=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724d9940, iter=(start = 5000, end = 5078)) at for_each.rs:55:9
    frame #16: 0x00000001000073bc unicorn_1`rayon::iter::plumbing::Producer::fold_with(self=rayon::range::IterProducer<i32> @ 0x00000001724d9980, folder=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724d9988) at mod.rs:110:9
    frame #17: 0x0000000100005e98 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=78, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724d9a10, producer=rayon::range::IterProducer<i32> @ 0x00000001724d9a94, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724d9a20) at mod.rs:438:13
    frame #18: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724d9b0d)) at mod.rs:418:21
    frame #19: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #20: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #21: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724d9d98) at panicking.rs:483:40
    frame #22: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #23: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #24: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #25: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #26: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #27: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724da370) at registry.rs:925:13
    frame #28: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724da460, oper_b=<unavailable>) at mod.rs:132:5
    frame #29: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=156, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724da430, producer=rayon::range::IterProducer<i32> @ 0x00000001724da4b4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724da440) at mod.rs:416:47
    frame #30: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724da52d)) at mod.rs:418:21
    frame #31: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #32: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #33: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724da7b8) at panicking.rs:483:40
    frame #34: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #35: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #36: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #37: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #38: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #39: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724dad90) at registry.rs:925:13
    frame #40: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724dae80, oper_b=<unavailable>) at mod.rs:132:5
    frame #41: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=312, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724dae50, producer=rayon::range::IterProducer<i32> @ 0x00000001724daed4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724dae60) at mod.rs:416:47
    frame #42: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724daf4d)) at mod.rs:418:21
    frame #43: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #44: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #45: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724db1d8) at panicking.rs:483:40
    frame #46: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #47: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #48: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #49: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #50: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #51: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724db7b0) at registry.rs:925:13
    frame #52: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724db8a0, oper_b=<unavailable>) at mod.rs:132:5
    frame #53: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=625, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724db870, producer=rayon::range::IterProducer<i32> @ 0x00000001724db8f4, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724db880) at mod.rs:416:47
    frame #54: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724db96d)) at mod.rs:418:21
    frame #55: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #56: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #57: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724dbbf8) at panicking.rs:483:40
    frame #58: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #59: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #60: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #61: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #62: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #63: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724dc1d0) at registry.rs:925:13
    frame #64: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724dc2c0, oper_b=<unavailable>) at mod.rs:132:5
    frame #65: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=1250, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724dc290, producer=rayon::range::IterProducer<i32> @ 0x00000001724dc314, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724dc2a0) at mod.rs:416:47
    frame #66: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724dc38d)) at mod.rs:418:21
    frame #67: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #68: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #69: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724dc618) at panicking.rs:483:40
    frame #70: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #71: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #72: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #73: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #74: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #75: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724dcbf0) at registry.rs:925:13
    frame #76: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724dcce0, oper_b=<unavailable>) at mod.rs:132:5
    frame #77: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=2500, migrated=false, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724dccb0, producer=rayon::range::IterProducer<i32> @ 0x00000001724dcd34, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724dccc0) at mod.rs:416:47
    frame #78: 0x0000000100005f84 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = false, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724dcdad)) at mod.rs:418:21
    frame #79: 0x0000000100004aa0 unicorn_1`rayon_core::join::join_context::call_a::{{closure}} at mod.rs:124:17
    frame #80: 0x0000000100006ac8 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #81: 0x000000010000550c unicorn_1`std::panicking::try::do_call(data=0x00000001724dd038) at panicking.rs:483:40
    frame #82: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #83: 0x000000010000527c unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #84: 0x0000000100008c14 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #85: 0x0000000100008d04 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #86: 0x0000000100004788 unicorn_1`rayon_core::join::join_context::{{closure}}(worker_thread=0x00000001724de080, injected=false) at mod.rs:141:24
    frame #87: 0x0000000100006758 unicorn_1`rayon_core::registry::in_worker(op=rayon_core::join::join_context::{closure_env#0}<rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#1}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>>, (), ()> @ 0x00000001724dd610) at registry.rs:925:13
    frame #88: 0x00000001000045f4 unicorn_1`rayon_core::join::join_context(oper_a=rayon::iter::plumbing::bridge_producer_consumer::helper::{closure_env#0}<rayon::range::IterProducer<i32>, rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}>> @ 0x00000001724dd700, oper_b=<unavailable>) at mod.rs:132:5
    frame #89: 0x0000000100005da0 unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper(len=5000, migrated=true, splitter=rayon::iter::plumbing::LengthSplitter @ 0x00000001724dd6d0, producer=rayon::range::IterProducer<i32> @ 0x00000001724dd754, consumer=rayon::iter::for_each::ForEachConsumer<unicorn_1::main::{closure_env#0}> @ 0x00000001724dd6e0) at mod.rs:416:47
    frame #90: 0x000000010000608c unicorn_1`rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}}(context=(migrated = true, _marker = core::marker::PhantomData<*mut ()> @ 0x00000001724dd7cd)) at mod.rs:427:21
    frame #91: 0x0000000100004b88 unicorn_1`rayon_core::join::join_context::call_b::{{closure}}(migrated=true) at mod.rs:129:25
    frame #92: 0x0000000100007cc4 unicorn_1`rayon_core::job::JobResult<T>::call::{{closure}} at job.rs:212:41
    frame #93: 0x0000000100006b38 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #94: 0x0000000100005448 unicorn_1`std::panicking::try::do_call(data=0x00000001724ddaa8) at panicking.rs:483:40
    frame #95: 0x00000001000056c8 unicorn_1`__rust_try + 32
    frame #96: 0x00000001000050c4 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #97: 0x0000000100008bdc unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #98: 0x0000000100008cb4 unicorn_1`rayon_core::unwind::halt_unwinding(func=<unavailable>) at unwind.rs:17:5
    frame #99: 0x0000000100007bcc unicorn_1`rayon_core::job::JobResult<T>::call(func=<unavailable>) at job.rs:212:15
    frame #100: 0x00000001000081b8 unicorn_1`<rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute(this=({...})) at job.rs:114:32
    frame #101: 0x0000000100d7f7fc unicorn_1`rayon_core::job::JobRef::execute(self=rayon_core::job::JobRef @ 0x00000001724ddde0) at job.rs:58:9
    frame #102: 0x0000000100d5e418 unicorn_1`rayon_core::registry::WorkerThread::execute(self=0x00000001724de080, job=rayon_core::job::JobRef @ 0x00000001724dde10) at registry.rs:804:9
    frame #103: 0x0000000100dd91e8 unicorn_1`rayon_core::registry::WorkerThread::wait_until_cold(self=0x00000001724de080, latch=0x0000000102013300) at registry.rs:781:17
    frame #104: 0x0000000100d5e2b8 unicorn_1`rayon_core::registry::WorkerThread::wait_until(self=0x00000001724de080, latch=0x0000000102013300) at registry.rs:755:13
    frame #105: 0x0000000100d5e9e0 unicorn_1`rayon_core::registry::main_loop(worker=<unavailable>, stealer=crossbeam_deque::deque::Stealer<rayon_core::job::JobRef> @ 0x00000001724de418, registry=(refs:21) {...}, index=18) at registry.rs:889:5
    frame #106: 0x0000000100d5c154 unicorn_1`rayon_core::registry::ThreadBuilder::run(self=<unavailable>) at registry.rs:53:18
    frame #107: 0x0000000100d5c500 unicorn_1`<rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn>::spawn::{{closure}} at registry.rs:98:20
    frame #108: 0x0000000100d8014c unicorn_1`std::sys_common::backtrace::__rust_begin_short_backtrace(f=<unavailable>) at backtrace.rs:121:18
    frame #109: 0x0000000100d65bf4 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} at mod.rs:550:17
    frame #110: 0x0000000100d86628 unicorn_1`<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once(self=<unavailable>, _args=()) at unwind_safe.rs:271:9
    frame #111: 0x0000000100d69388 unicorn_1`std::panicking::try::do_call(data=0x00000001724dea28) at panicking.rs:483:40
    frame #112: 0x0000000100d69ff0 unicorn_1`__rust_try + 32
    frame #113: 0x0000000100d68f48 unicorn_1`std::panicking::try(f=<unavailable>) at panicking.rs:447:19
    frame #114: 0x0000000100d688b4 unicorn_1`std::panic::catch_unwind(f=<unavailable>) at panic.rs:140:14
    frame #115: 0x0000000100d65a04 unicorn_1`std::thread::Builder::spawn_unchecked_::{{closure}} at mod.rs:549:30
    frame #116: 0x0000000100d81a74 unicorn_1`core::ops::function::FnOnce::call_once{{vtable.shim}}((null)=0x0000000101a0cb20, (null)=()) at function.rs:250:5
    frame #117: 0x0000000100dc4bfc unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #118: 0x0000000100dc4bf0 unicorn_1`std::sys::unix::thread::Thread::new::thread_start [inlined] <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once at boxed.rs:1988:9 [opt]
    frame #119: 0x0000000100dc4bec unicorn_1`std::sys::unix::thread::Thread::new::thread_start at thread.rs:108:17 [opt]
    frame #120: 0x000000019868e06c libsystem_pthread.dylib`_pthread_start + 148
  thread #21
    frame #0: 0x000000019854f44c libsystem_c.dylib`__vfprintf + 1896
    frame #1: 0x000000019857d9c8 libsystem_c.dylib`_vsnprintf + 224
    frame #2: 0x0000000198551e90 libsystem_c.dylib`__snprintf_chk + 48
    frame #3: 0x00000001000ea780 unicorn_1`tcg_malloc(tcg_ctx=0x0000000101d04a10, size=1) at tcg.h:987:12
    frame #4: 0x000000010016eacc unicorn_1`gen_uc_tracecode(tcg_ctx=0x0000000110088000, size=4, type=2, uc=0x00000001050a3600, pc=2147483648) at tcg-op.h:57:17
    frame #5: 0x00000001001ba0b8 unicorn_1`ppc_translate_init_ppc(uc=0x00000001726e58e0) at translate.c:112:34
    frame #6: 0x0000000100123e38 unicorn_1`translator_loop_x86_64(ops=0x0000000100e826b0, db=0x00000001726e58e0, cpu=0x0000000118008000, tb=0x0000000580000080, max_insns=512) at translator.c:124:33
    frame #7: 0x000000010016b86c unicorn_1`ppc_translate_init_ppc(uc=0x0000000000000000) at translate.c:87:45
    frame #8: 0x00000001001215b4 unicorn_1`tb_gen_code_arm(cpu=0x0000000118008000, pc=2147483648, cs_base=0, flags=84022528, cflags=-16777216) at translate-all.c:1649:5
    frame #9: 0x000000010010f4a4 unicorn_1`tb_find(cpu=0x0000000118008000, last_tb=0x0000000000000000, tb_exit=0, cf_mask=0) at cpu-exec.c:259:14
    frame #10: 0x000000010010ee18 unicorn_1`tb_hash_func(phys_pc=72057598332942900, pc=0, flags=0, cf_mask=0, trace_vcpu_dstate=0) at tb-hash.h:53
    frame #11: 0x00000001000d3410 unicorn_1`tcg_cpu_exec(uc=0x00000001050a3600) at cpus.c:96:17
    frame #12: 0x00000001000d3340 unicorn_1`cpu_get_clock_mips - 18446744069413719231

